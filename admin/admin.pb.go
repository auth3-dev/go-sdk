// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: identity/admin/admin.proto

package admin

import (
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ClientType int32

const (
	ClientType_CLIENT_TYPE_UNSET   ClientType = 0
	ClientType_CLIENT_FIRST_PARTY  ClientType = 1
	ClientType_CLIENT_THIRD_PARTY  ClientType = 2
	ClientType_CLIENT_SYSTEM_PARTY ClientType = 3
)

// Enum value maps for ClientType.
var (
	ClientType_name = map[int32]string{
		0: "CLIENT_TYPE_UNSET",
		1: "CLIENT_FIRST_PARTY",
		2: "CLIENT_THIRD_PARTY",
		3: "CLIENT_SYSTEM_PARTY",
	}
	ClientType_value = map[string]int32{
		"CLIENT_TYPE_UNSET":   0,
		"CLIENT_FIRST_PARTY":  1,
		"CLIENT_THIRD_PARTY":  2,
		"CLIENT_SYSTEM_PARTY": 3,
	}
)

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}

func (x ClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[0].Descriptor()
}

func (ClientType) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[0]
}

func (x ClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientType.Descriptor instead.
func (ClientType) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{0}
}

type SubjectType int32

const (
	SubjectType_SUBJECT_TYPE_PUBLIC   SubjectType = 0
	SubjectType_SUBJECT_TYPE_PAIRWISE SubjectType = 1
)

// Enum value maps for SubjectType.
var (
	SubjectType_name = map[int32]string{
		0: "SUBJECT_TYPE_PUBLIC",
		1: "SUBJECT_TYPE_PAIRWISE",
	}
	SubjectType_value = map[string]int32{
		"SUBJECT_TYPE_PUBLIC":   0,
		"SUBJECT_TYPE_PAIRWISE": 1,
	}
)

func (x SubjectType) Enum() *SubjectType {
	p := new(SubjectType)
	*p = x
	return p
}

func (x SubjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[1].Descriptor()
}

func (SubjectType) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[1]
}

func (x SubjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubjectType.Descriptor instead.
func (SubjectType) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{1}
}

type TokenEndpointAuthMethod int32

const (
	TokenEndpointAuthMethod_TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC TokenEndpointAuthMethod = 0
	TokenEndpointAuthMethod_TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_POST  TokenEndpointAuthMethod = 1
	TokenEndpointAuthMethod_TOKEN_ENDPOINT_AUTH_METHOD_PRIVATE_KEY_JWT     TokenEndpointAuthMethod = 2
	TokenEndpointAuthMethod_TOKEN_ENDPOINT_AUTH_METHOD_NONE                TokenEndpointAuthMethod = 3
)

// Enum value maps for TokenEndpointAuthMethod.
var (
	TokenEndpointAuthMethod_name = map[int32]string{
		0: "TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC",
		1: "TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_POST",
		2: "TOKEN_ENDPOINT_AUTH_METHOD_PRIVATE_KEY_JWT",
		3: "TOKEN_ENDPOINT_AUTH_METHOD_NONE",
	}
	TokenEndpointAuthMethod_value = map[string]int32{
		"TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC": 0,
		"TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_POST":  1,
		"TOKEN_ENDPOINT_AUTH_METHOD_PRIVATE_KEY_JWT":     2,
		"TOKEN_ENDPOINT_AUTH_METHOD_NONE":                3,
	}
)

func (x TokenEndpointAuthMethod) Enum() *TokenEndpointAuthMethod {
	p := new(TokenEndpointAuthMethod)
	*p = x
	return p
}

func (x TokenEndpointAuthMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenEndpointAuthMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[2].Descriptor()
}

func (TokenEndpointAuthMethod) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[2]
}

func (x TokenEndpointAuthMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenEndpointAuthMethod.Descriptor instead.
func (TokenEndpointAuthMethod) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{2}
}

type TokenEndpointAuthSigningAlg int32

const (
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET TokenEndpointAuthSigningAlg = 0
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS256 TokenEndpointAuthSigningAlg = 1
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS384 TokenEndpointAuthSigningAlg = 2
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS512 TokenEndpointAuthSigningAlg = 3
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS256 TokenEndpointAuthSigningAlg = 4
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS384 TokenEndpointAuthSigningAlg = 5
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS512 TokenEndpointAuthSigningAlg = 6
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES256 TokenEndpointAuthSigningAlg = 7
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES384 TokenEndpointAuthSigningAlg = 8
	TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES512 TokenEndpointAuthSigningAlg = 9
)

// Enum value maps for TokenEndpointAuthSigningAlg.
var (
	TokenEndpointAuthSigningAlg_name = map[int32]string{
		0: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET",
		1: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS256",
		2: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS384",
		3: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS512",
		4: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS256",
		5: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS384",
		6: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS512",
		7: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES256",
		8: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES384",
		9: "TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES512",
	}
	TokenEndpointAuthSigningAlg_value = map[string]int32{
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET": 0,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS256": 1,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS384": 2,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_RS512": 3,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS256": 4,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS384": 5,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_PS512": 6,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES256": 7,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES384": 8,
		"TOKEN_ENDPOINT_AUTH_SIGNING_ALG_ES512": 9,
	}
)

func (x TokenEndpointAuthSigningAlg) Enum() *TokenEndpointAuthSigningAlg {
	p := new(TokenEndpointAuthSigningAlg)
	*p = x
	return p
}

func (x TokenEndpointAuthSigningAlg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenEndpointAuthSigningAlg) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[3].Descriptor()
}

func (TokenEndpointAuthSigningAlg) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[3]
}

func (x TokenEndpointAuthSigningAlg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenEndpointAuthSigningAlg.Descriptor instead.
func (TokenEndpointAuthSigningAlg) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{3}
}

type GrantType int32

const (
	GrantType_GRANT_TYPE_UNSET              GrantType = 0
	GrantType_GRANT_TYPE_CLIENT_CREDENTIALS GrantType = 1
	GrantType_GRANT_TYPE_AUTHORIZATION_CODE GrantType = 2
	GrantType_GRANT_TYPE_IMPLICIT           GrantType = 3
	GrantType_GRANT_TYPE_REFRESH_TOKEN      GrantType = 4
	GrantType_GRANT_TYPE_DEVICE_CODE        GrantType = 5
)

// Enum value maps for GrantType.
var (
	GrantType_name = map[int32]string{
		0: "GRANT_TYPE_UNSET",
		1: "GRANT_TYPE_CLIENT_CREDENTIALS",
		2: "GRANT_TYPE_AUTHORIZATION_CODE",
		3: "GRANT_TYPE_IMPLICIT",
		4: "GRANT_TYPE_REFRESH_TOKEN",
		5: "GRANT_TYPE_DEVICE_CODE",
	}
	GrantType_value = map[string]int32{
		"GRANT_TYPE_UNSET":              0,
		"GRANT_TYPE_CLIENT_CREDENTIALS": 1,
		"GRANT_TYPE_AUTHORIZATION_CODE": 2,
		"GRANT_TYPE_IMPLICIT":           3,
		"GRANT_TYPE_REFRESH_TOKEN":      4,
		"GRANT_TYPE_DEVICE_CODE":        5,
	}
)

func (x GrantType) Enum() *GrantType {
	p := new(GrantType)
	*p = x
	return p
}

func (x GrantType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrantType) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[4].Descriptor()
}

func (GrantType) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[4]
}

func (x GrantType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrantType.Descriptor instead.
func (GrantType) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{4}
}

type ResponseType int32

const (
	ResponseType_RESPONSE_TYPE_UNSET               ResponseType = 0
	ResponseType_RESPONSE_TYPE_NONE                ResponseType = 1
	ResponseType_RESPONSE_TYPE_ID_TOKEN            ResponseType = 2
	ResponseType_RESPONSE_TYPE_TOKEN               ResponseType = 3
	ResponseType_RESPONSE_TYPE_CODE                ResponseType = 4
	ResponseType_RESPONSE_TYPE_ID_TOKEN_TOKEN      ResponseType = 5
	ResponseType_RESPONSE_TYPE_CODE_ID_TOKEN       ResponseType = 6
	ResponseType_RESPONSE_TYPE_CODE_TOKEN          ResponseType = 7
	ResponseType_RESPONSE_TYPE_CODE_ID_TOKEN_TOKEN ResponseType = 8
)

// Enum value maps for ResponseType.
var (
	ResponseType_name = map[int32]string{
		0: "RESPONSE_TYPE_UNSET",
		1: "RESPONSE_TYPE_NONE",
		2: "RESPONSE_TYPE_ID_TOKEN",
		3: "RESPONSE_TYPE_TOKEN",
		4: "RESPONSE_TYPE_CODE",
		5: "RESPONSE_TYPE_ID_TOKEN_TOKEN",
		6: "RESPONSE_TYPE_CODE_ID_TOKEN",
		7: "RESPONSE_TYPE_CODE_TOKEN",
		8: "RESPONSE_TYPE_CODE_ID_TOKEN_TOKEN",
	}
	ResponseType_value = map[string]int32{
		"RESPONSE_TYPE_UNSET":               0,
		"RESPONSE_TYPE_NONE":                1,
		"RESPONSE_TYPE_ID_TOKEN":            2,
		"RESPONSE_TYPE_TOKEN":               3,
		"RESPONSE_TYPE_CODE":                4,
		"RESPONSE_TYPE_ID_TOKEN_TOKEN":      5,
		"RESPONSE_TYPE_CODE_ID_TOKEN":       6,
		"RESPONSE_TYPE_CODE_TOKEN":          7,
		"RESPONSE_TYPE_CODE_ID_TOKEN_TOKEN": 8,
	}
)

func (x ResponseType) Enum() *ResponseType {
	p := new(ResponseType)
	*p = x
	return p
}

func (x ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[5].Descriptor()
}

func (ResponseType) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[5]
}

func (x ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseType.Descriptor instead.
func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{5}
}

type RequestObjectSigningAlg int32

const (
	RequestObjectSigningAlg_REQUEST_OBJECT_SIGNING_ALG_UNSET RequestObjectSigningAlg = 0
	RequestObjectSigningAlg_REQUEST_OBJECT_SIGNING_ALG_NONE  RequestObjectSigningAlg = 1
	RequestObjectSigningAlg_REQUEST_OBJECT_SIGNING_ALG_RS256 RequestObjectSigningAlg = 2
)

// Enum value maps for RequestObjectSigningAlg.
var (
	RequestObjectSigningAlg_name = map[int32]string{
		0: "REQUEST_OBJECT_SIGNING_ALG_UNSET",
		1: "REQUEST_OBJECT_SIGNING_ALG_NONE",
		2: "REQUEST_OBJECT_SIGNING_ALG_RS256",
	}
	RequestObjectSigningAlg_value = map[string]int32{
		"REQUEST_OBJECT_SIGNING_ALG_UNSET": 0,
		"REQUEST_OBJECT_SIGNING_ALG_NONE":  1,
		"REQUEST_OBJECT_SIGNING_ALG_RS256": 2,
	}
)

func (x RequestObjectSigningAlg) Enum() *RequestObjectSigningAlg {
	p := new(RequestObjectSigningAlg)
	*p = x
	return p
}

func (x RequestObjectSigningAlg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestObjectSigningAlg) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[6].Descriptor()
}

func (RequestObjectSigningAlg) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[6]
}

func (x RequestObjectSigningAlg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestObjectSigningAlg.Descriptor instead.
func (RequestObjectSigningAlg) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{6}
}

type UserinfoSignedResponseAlg int32

const (
	UserinfoSignedResponseAlg_USERINFO_SIGNED_RESPONSE_ALG_UNSET UserinfoSignedResponseAlg = 0
	UserinfoSignedResponseAlg_USERINFO_SIGNED_RESPONSE_ALG_NONE  UserinfoSignedResponseAlg = 1
	UserinfoSignedResponseAlg_USERINFO_SIGNED_RESPONSE_ALG_RS256 UserinfoSignedResponseAlg = 2
)

// Enum value maps for UserinfoSignedResponseAlg.
var (
	UserinfoSignedResponseAlg_name = map[int32]string{
		0: "USERINFO_SIGNED_RESPONSE_ALG_UNSET",
		1: "USERINFO_SIGNED_RESPONSE_ALG_NONE",
		2: "USERINFO_SIGNED_RESPONSE_ALG_RS256",
	}
	UserinfoSignedResponseAlg_value = map[string]int32{
		"USERINFO_SIGNED_RESPONSE_ALG_UNSET": 0,
		"USERINFO_SIGNED_RESPONSE_ALG_NONE":  1,
		"USERINFO_SIGNED_RESPONSE_ALG_RS256": 2,
	}
)

func (x UserinfoSignedResponseAlg) Enum() *UserinfoSignedResponseAlg {
	p := new(UserinfoSignedResponseAlg)
	*p = x
	return p
}

func (x UserinfoSignedResponseAlg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserinfoSignedResponseAlg) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[7].Descriptor()
}

func (UserinfoSignedResponseAlg) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[7]
}

func (x UserinfoSignedResponseAlg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserinfoSignedResponseAlg.Descriptor instead.
func (UserinfoSignedResponseAlg) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{7}
}

type GetIdentitiesResponse_Lock int32

const (
	GetIdentitiesResponse_UNLOCKED     GetIdentitiesResponse_Lock = 0
	GetIdentitiesResponse_ADMIN_LOCKED GetIdentitiesResponse_Lock = 1
)

// Enum value maps for GetIdentitiesResponse_Lock.
var (
	GetIdentitiesResponse_Lock_name = map[int32]string{
		0: "UNLOCKED",
		1: "ADMIN_LOCKED",
	}
	GetIdentitiesResponse_Lock_value = map[string]int32{
		"UNLOCKED":     0,
		"ADMIN_LOCKED": 1,
	}
)

func (x GetIdentitiesResponse_Lock) Enum() *GetIdentitiesResponse_Lock {
	p := new(GetIdentitiesResponse_Lock)
	*p = x
	return p
}

func (x GetIdentitiesResponse_Lock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetIdentitiesResponse_Lock) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[8].Descriptor()
}

func (GetIdentitiesResponse_Lock) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[8]
}

func (x GetIdentitiesResponse_Lock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetIdentitiesResponse_Lock.Descriptor instead.
func (GetIdentitiesResponse_Lock) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{3, 0}
}

type GetIdentityResponse_Lock int32

const (
	GetIdentityResponse_UNLOCKED     GetIdentityResponse_Lock = 0
	GetIdentityResponse_ADMIN_LOCKED GetIdentityResponse_Lock = 1
)

// Enum value maps for GetIdentityResponse_Lock.
var (
	GetIdentityResponse_Lock_name = map[int32]string{
		0: "UNLOCKED",
		1: "ADMIN_LOCKED",
	}
	GetIdentityResponse_Lock_value = map[string]int32{
		"UNLOCKED":     0,
		"ADMIN_LOCKED": 1,
	}
)

func (x GetIdentityResponse_Lock) Enum() *GetIdentityResponse_Lock {
	p := new(GetIdentityResponse_Lock)
	*p = x
	return p
}

func (x GetIdentityResponse_Lock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetIdentityResponse_Lock) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[9].Descriptor()
}

func (GetIdentityResponse_Lock) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[9]
}

func (x GetIdentityResponse_Lock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetIdentityResponse_Lock.Descriptor instead.
func (GetIdentityResponse_Lock) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{5, 0}
}

type GetIdentityByIdentifierResponse_Identity_Lock int32

const (
	GetIdentityByIdentifierResponse_Identity_UNLOCKED     GetIdentityByIdentifierResponse_Identity_Lock = 0
	GetIdentityByIdentifierResponse_Identity_ADMIN_LOCKED GetIdentityByIdentifierResponse_Identity_Lock = 1
)

// Enum value maps for GetIdentityByIdentifierResponse_Identity_Lock.
var (
	GetIdentityByIdentifierResponse_Identity_Lock_name = map[int32]string{
		0: "UNLOCKED",
		1: "ADMIN_LOCKED",
	}
	GetIdentityByIdentifierResponse_Identity_Lock_value = map[string]int32{
		"UNLOCKED":     0,
		"ADMIN_LOCKED": 1,
	}
)

func (x GetIdentityByIdentifierResponse_Identity_Lock) Enum() *GetIdentityByIdentifierResponse_Identity_Lock {
	p := new(GetIdentityByIdentifierResponse_Identity_Lock)
	*p = x
	return p
}

func (x GetIdentityByIdentifierResponse_Identity_Lock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetIdentityByIdentifierResponse_Identity_Lock) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[10].Descriptor()
}

func (GetIdentityByIdentifierResponse_Identity_Lock) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[10]
}

func (x GetIdentityByIdentifierResponse_Identity_Lock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetIdentityByIdentifierResponse_Identity_Lock.Descriptor instead.
func (GetIdentityByIdentifierResponse_Identity_Lock) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{7, 0, 0}
}

type GetIdentitiesByAttributeResponse_Identity_Lock int32

const (
	GetIdentitiesByAttributeResponse_Identity_UNLOCKED     GetIdentitiesByAttributeResponse_Identity_Lock = 0
	GetIdentitiesByAttributeResponse_Identity_ADMIN_LOCKED GetIdentitiesByAttributeResponse_Identity_Lock = 1
)

// Enum value maps for GetIdentitiesByAttributeResponse_Identity_Lock.
var (
	GetIdentitiesByAttributeResponse_Identity_Lock_name = map[int32]string{
		0: "UNLOCKED",
		1: "ADMIN_LOCKED",
	}
	GetIdentitiesByAttributeResponse_Identity_Lock_value = map[string]int32{
		"UNLOCKED":     0,
		"ADMIN_LOCKED": 1,
	}
)

func (x GetIdentitiesByAttributeResponse_Identity_Lock) Enum() *GetIdentitiesByAttributeResponse_Identity_Lock {
	p := new(GetIdentitiesByAttributeResponse_Identity_Lock)
	*p = x
	return p
}

func (x GetIdentitiesByAttributeResponse_Identity_Lock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetIdentitiesByAttributeResponse_Identity_Lock) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[11].Descriptor()
}

func (GetIdentitiesByAttributeResponse_Identity_Lock) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[11]
}

func (x GetIdentitiesByAttributeResponse_Identity_Lock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetIdentitiesByAttributeResponse_Identity_Lock.Descriptor instead.
func (GetIdentitiesByAttributeResponse_Identity_Lock) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{9, 0, 0}
}

type UpdateIdentityRequest_Lock int32

const (
	UpdateIdentityRequest_UNLOCKED     UpdateIdentityRequest_Lock = 0
	UpdateIdentityRequest_ADMIN_LOCKED UpdateIdentityRequest_Lock = 1
)

// Enum value maps for UpdateIdentityRequest_Lock.
var (
	UpdateIdentityRequest_Lock_name = map[int32]string{
		0: "UNLOCKED",
		1: "ADMIN_LOCKED",
	}
	UpdateIdentityRequest_Lock_value = map[string]int32{
		"UNLOCKED":     0,
		"ADMIN_LOCKED": 1,
	}
)

func (x UpdateIdentityRequest_Lock) Enum() *UpdateIdentityRequest_Lock {
	p := new(UpdateIdentityRequest_Lock)
	*p = x
	return p
}

func (x UpdateIdentityRequest_Lock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateIdentityRequest_Lock) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[12].Descriptor()
}

func (UpdateIdentityRequest_Lock) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[12]
}

func (x UpdateIdentityRequest_Lock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateIdentityRequest_Lock.Descriptor instead.
func (UpdateIdentityRequest_Lock) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{10, 0}
}

type CreateConnectionRequest_Providers int32

const (
	CreateConnectionRequest_NONE            CreateConnectionRequest_Providers = 0
	CreateConnectionRequest_OPENID          CreateConnectionRequest_Providers = 1
	CreateConnectionRequest_AMAZON          CreateConnectionRequest_Providers = 2
	CreateConnectionRequest_BITBUCKET       CreateConnectionRequest_Providers = 3
	CreateConnectionRequest_BOX             CreateConnectionRequest_Providers = 4
	CreateConnectionRequest_DAILYMOTION     CreateConnectionRequest_Providers = 5
	CreateConnectionRequest_DEEZER          CreateConnectionRequest_Providers = 6
	CreateConnectionRequest_DIGITALOCEAN    CreateConnectionRequest_Providers = 7
	CreateConnectionRequest_DISCORD         CreateConnectionRequest_Providers = 8
	CreateConnectionRequest_DROPBOX         CreateConnectionRequest_Providers = 9
	CreateConnectionRequest_EVEONLINE       CreateConnectionRequest_Providers = 10
	CreateConnectionRequest_FACEBOOK        CreateConnectionRequest_Providers = 11
	CreateConnectionRequest_FITBIT          CreateConnectionRequest_Providers = 12
	CreateConnectionRequest_GITEA           CreateConnectionRequest_Providers = 13
	CreateConnectionRequest_GITHUB          CreateConnectionRequest_Providers = 14
	CreateConnectionRequest_GITLAB          CreateConnectionRequest_Providers = 15
	CreateConnectionRequest_GOOGLE          CreateConnectionRequest_Providers = 16
	CreateConnectionRequest_SHOPIFY         CreateConnectionRequest_Providers = 18
	CreateConnectionRequest_SOUNDCLOUD      CreateConnectionRequest_Providers = 19
	CreateConnectionRequest_SPOTIFY         CreateConnectionRequest_Providers = 20
	CreateConnectionRequest_STEAM           CreateConnectionRequest_Providers = 21
	CreateConnectionRequest_STRIPE          CreateConnectionRequest_Providers = 22
	CreateConnectionRequest_TWITCH          CreateConnectionRequest_Providers = 23
	CreateConnectionRequest_UBER            CreateConnectionRequest_Providers = 24
	CreateConnectionRequest_WEPAY           CreateConnectionRequest_Providers = 25
	CreateConnectionRequest_YAHOO           CreateConnectionRequest_Providers = 26
	CreateConnectionRequest_YAMMER          CreateConnectionRequest_Providers = 27
	CreateConnectionRequest_HEROKU          CreateConnectionRequest_Providers = 28
	CreateConnectionRequest_INSTAGRAM       CreateConnectionRequest_Providers = 29
	CreateConnectionRequest_INTERCOM        CreateConnectionRequest_Providers = 30
	CreateConnectionRequest_KAKAO           CreateConnectionRequest_Providers = 31
	CreateConnectionRequest_LASTFM          CreateConnectionRequest_Providers = 32
	CreateConnectionRequest_LINKEDIN        CreateConnectionRequest_Providers = 33
	CreateConnectionRequest_LINE            CreateConnectionRequest_Providers = 34
	CreateConnectionRequest_ONEDRIVE        CreateConnectionRequest_Providers = 35
	CreateConnectionRequest_AZUREAD         CreateConnectionRequest_Providers = 36
	CreateConnectionRequest_MICROSOFTONLINE CreateConnectionRequest_Providers = 37
	CreateConnectionRequest_BATTLENET       CreateConnectionRequest_Providers = 38
	CreateConnectionRequest_PAYPAL          CreateConnectionRequest_Providers = 39
	CreateConnectionRequest_TWITTER         CreateConnectionRequest_Providers = 40
	CreateConnectionRequest_SALESFORCE      CreateConnectionRequest_Providers = 41
	CreateConnectionRequest_TYPETALK        CreateConnectionRequest_Providers = 42
	CreateConnectionRequest_SLACK           CreateConnectionRequest_Providers = 43
	CreateConnectionRequest_MEETUP          CreateConnectionRequest_Providers = 44
	CreateConnectionRequest_XERO            CreateConnectionRequest_Providers = 46
	CreateConnectionRequest_VK              CreateConnectionRequest_Providers = 47
	CreateConnectionRequest_NAVER           CreateConnectionRequest_Providers = 48
	CreateConnectionRequest_YANDEX          CreateConnectionRequest_Providers = 49
	CreateConnectionRequest_NEXTCLOUD       CreateConnectionRequest_Providers = 50
	CreateConnectionRequest_APPLE           CreateConnectionRequest_Providers = 52
	CreateConnectionRequest_STRAVA          CreateConnectionRequest_Providers = 53
)

// Enum value maps for CreateConnectionRequest_Providers.
var (
	CreateConnectionRequest_Providers_name = map[int32]string{
		0:  "NONE",
		1:  "OPENID",
		2:  "AMAZON",
		3:  "BITBUCKET",
		4:  "BOX",
		5:  "DAILYMOTION",
		6:  "DEEZER",
		7:  "DIGITALOCEAN",
		8:  "DISCORD",
		9:  "DROPBOX",
		10: "EVEONLINE",
		11: "FACEBOOK",
		12: "FITBIT",
		13: "GITEA",
		14: "GITHUB",
		15: "GITLAB",
		16: "GOOGLE",
		18: "SHOPIFY",
		19: "SOUNDCLOUD",
		20: "SPOTIFY",
		21: "STEAM",
		22: "STRIPE",
		23: "TWITCH",
		24: "UBER",
		25: "WEPAY",
		26: "YAHOO",
		27: "YAMMER",
		28: "HEROKU",
		29: "INSTAGRAM",
		30: "INTERCOM",
		31: "KAKAO",
		32: "LASTFM",
		33: "LINKEDIN",
		34: "LINE",
		35: "ONEDRIVE",
		36: "AZUREAD",
		37: "MICROSOFTONLINE",
		38: "BATTLENET",
		39: "PAYPAL",
		40: "TWITTER",
		41: "SALESFORCE",
		42: "TYPETALK",
		43: "SLACK",
		44: "MEETUP",
		46: "XERO",
		47: "VK",
		48: "NAVER",
		49: "YANDEX",
		50: "NEXTCLOUD",
		52: "APPLE",
		53: "STRAVA",
	}
	CreateConnectionRequest_Providers_value = map[string]int32{
		"NONE":            0,
		"OPENID":          1,
		"AMAZON":          2,
		"BITBUCKET":       3,
		"BOX":             4,
		"DAILYMOTION":     5,
		"DEEZER":          6,
		"DIGITALOCEAN":    7,
		"DISCORD":         8,
		"DROPBOX":         9,
		"EVEONLINE":       10,
		"FACEBOOK":        11,
		"FITBIT":          12,
		"GITEA":           13,
		"GITHUB":          14,
		"GITLAB":          15,
		"GOOGLE":          16,
		"SHOPIFY":         18,
		"SOUNDCLOUD":      19,
		"SPOTIFY":         20,
		"STEAM":           21,
		"STRIPE":          22,
		"TWITCH":          23,
		"UBER":            24,
		"WEPAY":           25,
		"YAHOO":           26,
		"YAMMER":          27,
		"HEROKU":          28,
		"INSTAGRAM":       29,
		"INTERCOM":        30,
		"KAKAO":           31,
		"LASTFM":          32,
		"LINKEDIN":        33,
		"LINE":            34,
		"ONEDRIVE":        35,
		"AZUREAD":         36,
		"MICROSOFTONLINE": 37,
		"BATTLENET":       38,
		"PAYPAL":          39,
		"TWITTER":         40,
		"SALESFORCE":      41,
		"TYPETALK":        42,
		"SLACK":           43,
		"MEETUP":          44,
		"XERO":            46,
		"VK":              47,
		"NAVER":           48,
		"YANDEX":          49,
		"NEXTCLOUD":       50,
		"APPLE":           52,
		"STRAVA":          53,
	}
)

func (x CreateConnectionRequest_Providers) Enum() *CreateConnectionRequest_Providers {
	p := new(CreateConnectionRequest_Providers)
	*p = x
	return p
}

func (x CreateConnectionRequest_Providers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateConnectionRequest_Providers) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[13].Descriptor()
}

func (CreateConnectionRequest_Providers) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[13]
}

func (x CreateConnectionRequest_Providers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateConnectionRequest_Providers.Descriptor instead.
func (CreateConnectionRequest_Providers) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{18, 0}
}

type CreateConnectionRequest_Types int32

const (
	CreateConnectionRequest_UNSET    CreateConnectionRequest_Types = 0
	CreateConnectionRequest_PASSWORD CreateConnectionRequest_Types = 1
	CreateConnectionRequest_OTP      CreateConnectionRequest_Types = 2
	CreateConnectionRequest_TOTP     CreateConnectionRequest_Types = 3
	CreateConnectionRequest_OIDC     CreateConnectionRequest_Types = 4
)

// Enum value maps for CreateConnectionRequest_Types.
var (
	CreateConnectionRequest_Types_name = map[int32]string{
		0: "UNSET",
		1: "PASSWORD",
		2: "OTP",
		3: "TOTP",
		4: "OIDC",
	}
	CreateConnectionRequest_Types_value = map[string]int32{
		"UNSET":    0,
		"PASSWORD": 1,
		"OTP":      2,
		"TOTP":     3,
		"OIDC":     4,
	}
)

func (x CreateConnectionRequest_Types) Enum() *CreateConnectionRequest_Types {
	p := new(CreateConnectionRequest_Types)
	*p = x
	return p
}

func (x CreateConnectionRequest_Types) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateConnectionRequest_Types) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[14].Descriptor()
}

func (CreateConnectionRequest_Types) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[14]
}

func (x CreateConnectionRequest_Types) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateConnectionRequest_Types.Descriptor instead.
func (CreateConnectionRequest_Types) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{18, 1}
}

type GetConnectionsResponse_Providers int32

const (
	GetConnectionsResponse_NONE            GetConnectionsResponse_Providers = 0
	GetConnectionsResponse_OPENID          GetConnectionsResponse_Providers = 1
	GetConnectionsResponse_AMAZON          GetConnectionsResponse_Providers = 2
	GetConnectionsResponse_BITBUCKET       GetConnectionsResponse_Providers = 3
	GetConnectionsResponse_BOX             GetConnectionsResponse_Providers = 4
	GetConnectionsResponse_DAILYMOTION     GetConnectionsResponse_Providers = 5
	GetConnectionsResponse_DEEZER          GetConnectionsResponse_Providers = 6
	GetConnectionsResponse_DIGITALOCEAN    GetConnectionsResponse_Providers = 7
	GetConnectionsResponse_DISCORD         GetConnectionsResponse_Providers = 8
	GetConnectionsResponse_DROPBOX         GetConnectionsResponse_Providers = 9
	GetConnectionsResponse_EVEONLINE       GetConnectionsResponse_Providers = 10
	GetConnectionsResponse_FACEBOOK        GetConnectionsResponse_Providers = 11
	GetConnectionsResponse_FITBIT          GetConnectionsResponse_Providers = 12
	GetConnectionsResponse_GITEA           GetConnectionsResponse_Providers = 13
	GetConnectionsResponse_GITHUB          GetConnectionsResponse_Providers = 14
	GetConnectionsResponse_GITLAB          GetConnectionsResponse_Providers = 15
	GetConnectionsResponse_GOOGLE          GetConnectionsResponse_Providers = 16
	GetConnectionsResponse_SHOPIFY         GetConnectionsResponse_Providers = 18
	GetConnectionsResponse_SOUNDCLOUD      GetConnectionsResponse_Providers = 19
	GetConnectionsResponse_SPOTIFY         GetConnectionsResponse_Providers = 20
	GetConnectionsResponse_STEAM           GetConnectionsResponse_Providers = 21
	GetConnectionsResponse_STRIPE          GetConnectionsResponse_Providers = 22
	GetConnectionsResponse_TWITCH          GetConnectionsResponse_Providers = 23
	GetConnectionsResponse_UBER            GetConnectionsResponse_Providers = 24
	GetConnectionsResponse_WEPAY           GetConnectionsResponse_Providers = 25
	GetConnectionsResponse_YAHOO           GetConnectionsResponse_Providers = 26
	GetConnectionsResponse_YAMMER          GetConnectionsResponse_Providers = 27
	GetConnectionsResponse_HEROKU          GetConnectionsResponse_Providers = 28
	GetConnectionsResponse_INSTAGRAM       GetConnectionsResponse_Providers = 29
	GetConnectionsResponse_INTERCOM        GetConnectionsResponse_Providers = 30
	GetConnectionsResponse_KAKAO           GetConnectionsResponse_Providers = 31
	GetConnectionsResponse_LASTFM          GetConnectionsResponse_Providers = 32
	GetConnectionsResponse_LINKEDIN        GetConnectionsResponse_Providers = 33
	GetConnectionsResponse_LINE            GetConnectionsResponse_Providers = 34
	GetConnectionsResponse_ONEDRIVE        GetConnectionsResponse_Providers = 35
	GetConnectionsResponse_AZUREAD         GetConnectionsResponse_Providers = 36
	GetConnectionsResponse_MICROSOFTONLINE GetConnectionsResponse_Providers = 37
	GetConnectionsResponse_BATTLENET       GetConnectionsResponse_Providers = 38
	GetConnectionsResponse_PAYPAL          GetConnectionsResponse_Providers = 39
	GetConnectionsResponse_TWITTER         GetConnectionsResponse_Providers = 40
	GetConnectionsResponse_SALESFORCE      GetConnectionsResponse_Providers = 41
	GetConnectionsResponse_TYPETALK        GetConnectionsResponse_Providers = 42
	GetConnectionsResponse_SLACK           GetConnectionsResponse_Providers = 43
	GetConnectionsResponse_MEETUP          GetConnectionsResponse_Providers = 44
	GetConnectionsResponse_XERO            GetConnectionsResponse_Providers = 46
	GetConnectionsResponse_VK              GetConnectionsResponse_Providers = 47
	GetConnectionsResponse_NAVER           GetConnectionsResponse_Providers = 48
	GetConnectionsResponse_YANDEX          GetConnectionsResponse_Providers = 49
	GetConnectionsResponse_NEXTCLOUD       GetConnectionsResponse_Providers = 50
	GetConnectionsResponse_APPLE           GetConnectionsResponse_Providers = 52
	GetConnectionsResponse_STRAVA          GetConnectionsResponse_Providers = 53
)

// Enum value maps for GetConnectionsResponse_Providers.
var (
	GetConnectionsResponse_Providers_name = map[int32]string{
		0:  "NONE",
		1:  "OPENID",
		2:  "AMAZON",
		3:  "BITBUCKET",
		4:  "BOX",
		5:  "DAILYMOTION",
		6:  "DEEZER",
		7:  "DIGITALOCEAN",
		8:  "DISCORD",
		9:  "DROPBOX",
		10: "EVEONLINE",
		11: "FACEBOOK",
		12: "FITBIT",
		13: "GITEA",
		14: "GITHUB",
		15: "GITLAB",
		16: "GOOGLE",
		18: "SHOPIFY",
		19: "SOUNDCLOUD",
		20: "SPOTIFY",
		21: "STEAM",
		22: "STRIPE",
		23: "TWITCH",
		24: "UBER",
		25: "WEPAY",
		26: "YAHOO",
		27: "YAMMER",
		28: "HEROKU",
		29: "INSTAGRAM",
		30: "INTERCOM",
		31: "KAKAO",
		32: "LASTFM",
		33: "LINKEDIN",
		34: "LINE",
		35: "ONEDRIVE",
		36: "AZUREAD",
		37: "MICROSOFTONLINE",
		38: "BATTLENET",
		39: "PAYPAL",
		40: "TWITTER",
		41: "SALESFORCE",
		42: "TYPETALK",
		43: "SLACK",
		44: "MEETUP",
		46: "XERO",
		47: "VK",
		48: "NAVER",
		49: "YANDEX",
		50: "NEXTCLOUD",
		52: "APPLE",
		53: "STRAVA",
	}
	GetConnectionsResponse_Providers_value = map[string]int32{
		"NONE":            0,
		"OPENID":          1,
		"AMAZON":          2,
		"BITBUCKET":       3,
		"BOX":             4,
		"DAILYMOTION":     5,
		"DEEZER":          6,
		"DIGITALOCEAN":    7,
		"DISCORD":         8,
		"DROPBOX":         9,
		"EVEONLINE":       10,
		"FACEBOOK":        11,
		"FITBIT":          12,
		"GITEA":           13,
		"GITHUB":          14,
		"GITLAB":          15,
		"GOOGLE":          16,
		"SHOPIFY":         18,
		"SOUNDCLOUD":      19,
		"SPOTIFY":         20,
		"STEAM":           21,
		"STRIPE":          22,
		"TWITCH":          23,
		"UBER":            24,
		"WEPAY":           25,
		"YAHOO":           26,
		"YAMMER":          27,
		"HEROKU":          28,
		"INSTAGRAM":       29,
		"INTERCOM":        30,
		"KAKAO":           31,
		"LASTFM":          32,
		"LINKEDIN":        33,
		"LINE":            34,
		"ONEDRIVE":        35,
		"AZUREAD":         36,
		"MICROSOFTONLINE": 37,
		"BATTLENET":       38,
		"PAYPAL":          39,
		"TWITTER":         40,
		"SALESFORCE":      41,
		"TYPETALK":        42,
		"SLACK":           43,
		"MEETUP":          44,
		"XERO":            46,
		"VK":              47,
		"NAVER":           48,
		"YANDEX":          49,
		"NEXTCLOUD":       50,
		"APPLE":           52,
		"STRAVA":          53,
	}
)

func (x GetConnectionsResponse_Providers) Enum() *GetConnectionsResponse_Providers {
	p := new(GetConnectionsResponse_Providers)
	*p = x
	return p
}

func (x GetConnectionsResponse_Providers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetConnectionsResponse_Providers) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[15].Descriptor()
}

func (GetConnectionsResponse_Providers) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[15]
}

func (x GetConnectionsResponse_Providers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetConnectionsResponse_Providers.Descriptor instead.
func (GetConnectionsResponse_Providers) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{21, 0}
}

type GetConnectionsResponse_Types int32

const (
	GetConnectionsResponse_UNSET    GetConnectionsResponse_Types = 0
	GetConnectionsResponse_PASSWORD GetConnectionsResponse_Types = 1
	GetConnectionsResponse_OTP      GetConnectionsResponse_Types = 2
	GetConnectionsResponse_TOTP     GetConnectionsResponse_Types = 3
	GetConnectionsResponse_OIDC     GetConnectionsResponse_Types = 4
)

// Enum value maps for GetConnectionsResponse_Types.
var (
	GetConnectionsResponse_Types_name = map[int32]string{
		0: "UNSET",
		1: "PASSWORD",
		2: "OTP",
		3: "TOTP",
		4: "OIDC",
	}
	GetConnectionsResponse_Types_value = map[string]int32{
		"UNSET":    0,
		"PASSWORD": 1,
		"OTP":      2,
		"TOTP":     3,
		"OIDC":     4,
	}
)

func (x GetConnectionsResponse_Types) Enum() *GetConnectionsResponse_Types {
	p := new(GetConnectionsResponse_Types)
	*p = x
	return p
}

func (x GetConnectionsResponse_Types) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetConnectionsResponse_Types) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[16].Descriptor()
}

func (GetConnectionsResponse_Types) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[16]
}

func (x GetConnectionsResponse_Types) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetConnectionsResponse_Types.Descriptor instead.
func (GetConnectionsResponse_Types) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{21, 1}
}

type GetConnectionsResponse_Purposes int32

const (
	GetConnectionsResponse_PURPOSE_UNKNOWN       GetConnectionsResponse_Purposes = 0
	GetConnectionsResponse_PURPOSE_MAIN_FACTOR   GetConnectionsResponse_Purposes = 1
	GetConnectionsResponse_PURPOSE_SECOND_FACTOR GetConnectionsResponse_Purposes = 2
)

// Enum value maps for GetConnectionsResponse_Purposes.
var (
	GetConnectionsResponse_Purposes_name = map[int32]string{
		0: "PURPOSE_UNKNOWN",
		1: "PURPOSE_MAIN_FACTOR",
		2: "PURPOSE_SECOND_FACTOR",
	}
	GetConnectionsResponse_Purposes_value = map[string]int32{
		"PURPOSE_UNKNOWN":       0,
		"PURPOSE_MAIN_FACTOR":   1,
		"PURPOSE_SECOND_FACTOR": 2,
	}
)

func (x GetConnectionsResponse_Purposes) Enum() *GetConnectionsResponse_Purposes {
	p := new(GetConnectionsResponse_Purposes)
	*p = x
	return p
}

func (x GetConnectionsResponse_Purposes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetConnectionsResponse_Purposes) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[17].Descriptor()
}

func (GetConnectionsResponse_Purposes) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[17]
}

func (x GetConnectionsResponse_Purposes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetConnectionsResponse_Purposes.Descriptor instead.
func (GetConnectionsResponse_Purposes) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{21, 2}
}

type UpdateConnectionRequest_Providers int32

const (
	UpdateConnectionRequest_NONE            UpdateConnectionRequest_Providers = 0
	UpdateConnectionRequest_OPENID          UpdateConnectionRequest_Providers = 1
	UpdateConnectionRequest_AMAZON          UpdateConnectionRequest_Providers = 2
	UpdateConnectionRequest_BITBUCKET       UpdateConnectionRequest_Providers = 3
	UpdateConnectionRequest_BOX             UpdateConnectionRequest_Providers = 4
	UpdateConnectionRequest_DAILYMOTION     UpdateConnectionRequest_Providers = 5
	UpdateConnectionRequest_DEEZER          UpdateConnectionRequest_Providers = 6
	UpdateConnectionRequest_DIGITALOCEAN    UpdateConnectionRequest_Providers = 7
	UpdateConnectionRequest_DISCORD         UpdateConnectionRequest_Providers = 8
	UpdateConnectionRequest_DROPBOX         UpdateConnectionRequest_Providers = 9
	UpdateConnectionRequest_EVEONLINE       UpdateConnectionRequest_Providers = 10
	UpdateConnectionRequest_FACEBOOK        UpdateConnectionRequest_Providers = 11
	UpdateConnectionRequest_FITBIT          UpdateConnectionRequest_Providers = 12
	UpdateConnectionRequest_GITEA           UpdateConnectionRequest_Providers = 13
	UpdateConnectionRequest_GITHUB          UpdateConnectionRequest_Providers = 14
	UpdateConnectionRequest_GITLAB          UpdateConnectionRequest_Providers = 15
	UpdateConnectionRequest_GOOGLE          UpdateConnectionRequest_Providers = 16
	UpdateConnectionRequest_SHOPIFY         UpdateConnectionRequest_Providers = 18
	UpdateConnectionRequest_SOUNDCLOUD      UpdateConnectionRequest_Providers = 19
	UpdateConnectionRequest_SPOTIFY         UpdateConnectionRequest_Providers = 20
	UpdateConnectionRequest_STEAM           UpdateConnectionRequest_Providers = 21
	UpdateConnectionRequest_STRIPE          UpdateConnectionRequest_Providers = 22
	UpdateConnectionRequest_TWITCH          UpdateConnectionRequest_Providers = 23
	UpdateConnectionRequest_UBER            UpdateConnectionRequest_Providers = 24
	UpdateConnectionRequest_WEPAY           UpdateConnectionRequest_Providers = 25
	UpdateConnectionRequest_YAHOO           UpdateConnectionRequest_Providers = 26
	UpdateConnectionRequest_YAMMER          UpdateConnectionRequest_Providers = 27
	UpdateConnectionRequest_HEROKU          UpdateConnectionRequest_Providers = 28
	UpdateConnectionRequest_INSTAGRAM       UpdateConnectionRequest_Providers = 29
	UpdateConnectionRequest_INTERCOM        UpdateConnectionRequest_Providers = 30
	UpdateConnectionRequest_KAKAO           UpdateConnectionRequest_Providers = 31
	UpdateConnectionRequest_LASTFM          UpdateConnectionRequest_Providers = 32
	UpdateConnectionRequest_LINKEDIN        UpdateConnectionRequest_Providers = 33
	UpdateConnectionRequest_LINE            UpdateConnectionRequest_Providers = 34
	UpdateConnectionRequest_ONEDRIVE        UpdateConnectionRequest_Providers = 35
	UpdateConnectionRequest_AZUREAD         UpdateConnectionRequest_Providers = 36
	UpdateConnectionRequest_MICROSOFTONLINE UpdateConnectionRequest_Providers = 37
	UpdateConnectionRequest_BATTLENET       UpdateConnectionRequest_Providers = 38
	UpdateConnectionRequest_PAYPAL          UpdateConnectionRequest_Providers = 39
	UpdateConnectionRequest_TWITTER         UpdateConnectionRequest_Providers = 40
	UpdateConnectionRequest_SALESFORCE      UpdateConnectionRequest_Providers = 41
	UpdateConnectionRequest_TYPETALK        UpdateConnectionRequest_Providers = 42
	UpdateConnectionRequest_SLACK           UpdateConnectionRequest_Providers = 43
	UpdateConnectionRequest_MEETUP          UpdateConnectionRequest_Providers = 44
	UpdateConnectionRequest_XERO            UpdateConnectionRequest_Providers = 46
	UpdateConnectionRequest_VK              UpdateConnectionRequest_Providers = 47
	UpdateConnectionRequest_NAVER           UpdateConnectionRequest_Providers = 48
	UpdateConnectionRequest_YANDEX          UpdateConnectionRequest_Providers = 49
	UpdateConnectionRequest_NEXTCLOUD       UpdateConnectionRequest_Providers = 50
	UpdateConnectionRequest_APPLE           UpdateConnectionRequest_Providers = 52
	UpdateConnectionRequest_STRAVA          UpdateConnectionRequest_Providers = 53
)

// Enum value maps for UpdateConnectionRequest_Providers.
var (
	UpdateConnectionRequest_Providers_name = map[int32]string{
		0:  "NONE",
		1:  "OPENID",
		2:  "AMAZON",
		3:  "BITBUCKET",
		4:  "BOX",
		5:  "DAILYMOTION",
		6:  "DEEZER",
		7:  "DIGITALOCEAN",
		8:  "DISCORD",
		9:  "DROPBOX",
		10: "EVEONLINE",
		11: "FACEBOOK",
		12: "FITBIT",
		13: "GITEA",
		14: "GITHUB",
		15: "GITLAB",
		16: "GOOGLE",
		18: "SHOPIFY",
		19: "SOUNDCLOUD",
		20: "SPOTIFY",
		21: "STEAM",
		22: "STRIPE",
		23: "TWITCH",
		24: "UBER",
		25: "WEPAY",
		26: "YAHOO",
		27: "YAMMER",
		28: "HEROKU",
		29: "INSTAGRAM",
		30: "INTERCOM",
		31: "KAKAO",
		32: "LASTFM",
		33: "LINKEDIN",
		34: "LINE",
		35: "ONEDRIVE",
		36: "AZUREAD",
		37: "MICROSOFTONLINE",
		38: "BATTLENET",
		39: "PAYPAL",
		40: "TWITTER",
		41: "SALESFORCE",
		42: "TYPETALK",
		43: "SLACK",
		44: "MEETUP",
		46: "XERO",
		47: "VK",
		48: "NAVER",
		49: "YANDEX",
		50: "NEXTCLOUD",
		52: "APPLE",
		53: "STRAVA",
	}
	UpdateConnectionRequest_Providers_value = map[string]int32{
		"NONE":            0,
		"OPENID":          1,
		"AMAZON":          2,
		"BITBUCKET":       3,
		"BOX":             4,
		"DAILYMOTION":     5,
		"DEEZER":          6,
		"DIGITALOCEAN":    7,
		"DISCORD":         8,
		"DROPBOX":         9,
		"EVEONLINE":       10,
		"FACEBOOK":        11,
		"FITBIT":          12,
		"GITEA":           13,
		"GITHUB":          14,
		"GITLAB":          15,
		"GOOGLE":          16,
		"SHOPIFY":         18,
		"SOUNDCLOUD":      19,
		"SPOTIFY":         20,
		"STEAM":           21,
		"STRIPE":          22,
		"TWITCH":          23,
		"UBER":            24,
		"WEPAY":           25,
		"YAHOO":           26,
		"YAMMER":          27,
		"HEROKU":          28,
		"INSTAGRAM":       29,
		"INTERCOM":        30,
		"KAKAO":           31,
		"LASTFM":          32,
		"LINKEDIN":        33,
		"LINE":            34,
		"ONEDRIVE":        35,
		"AZUREAD":         36,
		"MICROSOFTONLINE": 37,
		"BATTLENET":       38,
		"PAYPAL":          39,
		"TWITTER":         40,
		"SALESFORCE":      41,
		"TYPETALK":        42,
		"SLACK":           43,
		"MEETUP":          44,
		"XERO":            46,
		"VK":              47,
		"NAVER":           48,
		"YANDEX":          49,
		"NEXTCLOUD":       50,
		"APPLE":           52,
		"STRAVA":          53,
	}
)

func (x UpdateConnectionRequest_Providers) Enum() *UpdateConnectionRequest_Providers {
	p := new(UpdateConnectionRequest_Providers)
	*p = x
	return p
}

func (x UpdateConnectionRequest_Providers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateConnectionRequest_Providers) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[18].Descriptor()
}

func (UpdateConnectionRequest_Providers) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[18]
}

func (x UpdateConnectionRequest_Providers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateConnectionRequest_Providers.Descriptor instead.
func (UpdateConnectionRequest_Providers) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{22, 0}
}

type UpdateConnectionRequest_Types int32

const (
	UpdateConnectionRequest_UNSET    UpdateConnectionRequest_Types = 0
	UpdateConnectionRequest_PASSWORD UpdateConnectionRequest_Types = 1
	UpdateConnectionRequest_OTP      UpdateConnectionRequest_Types = 2
	UpdateConnectionRequest_TOTP     UpdateConnectionRequest_Types = 3
	UpdateConnectionRequest_OIDC     UpdateConnectionRequest_Types = 4
)

// Enum value maps for UpdateConnectionRequest_Types.
var (
	UpdateConnectionRequest_Types_name = map[int32]string{
		0: "UNSET",
		1: "PASSWORD",
		2: "OTP",
		3: "TOTP",
		4: "OIDC",
	}
	UpdateConnectionRequest_Types_value = map[string]int32{
		"UNSET":    0,
		"PASSWORD": 1,
		"OTP":      2,
		"TOTP":     3,
		"OIDC":     4,
	}
)

func (x UpdateConnectionRequest_Types) Enum() *UpdateConnectionRequest_Types {
	p := new(UpdateConnectionRequest_Types)
	*p = x
	return p
}

func (x UpdateConnectionRequest_Types) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateConnectionRequest_Types) Descriptor() protoreflect.EnumDescriptor {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[19].Descriptor()
}

func (UpdateConnectionRequest_Types) Type() protoreflect.EnumType {
	return &file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes[19]
}

func (x UpdateConnectionRequest_Types) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateConnectionRequest_Types.Descriptor instead.
func (UpdateConnectionRequest_Types) EnumDescriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{22, 1}
}

type CreateIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data         *_struct.Struct `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ConnectionId string          `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	SchemaId     string          `protobuf:"bytes,3,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
}

func (x *CreateIdentityRequest) Reset() {
	*x = CreateIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityRequest) ProtoMessage() {}

func (x *CreateIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityRequest.ProtoReflect.Descriptor instead.
func (*CreateIdentityRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{0}
}

func (x *CreateIdentityRequest) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateIdentityRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *CreateIdentityRequest) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

type CreateIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *CreateIdentityResponse) Reset() {
	*x = CreateIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityResponse) ProtoMessage() {}

func (x *CreateIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityResponse.ProtoReflect.Descriptor instead.
func (*CreateIdentityResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIdentityResponse) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type GetIdentitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *GetIdentitiesRequest) Reset() {
	*x = GetIdentitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentitiesRequest) ProtoMessage() {}

func (x *GetIdentitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentitiesRequest.ProtoReflect.Descriptor instead.
func (*GetIdentitiesRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{2}
}

func (x *GetIdentitiesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetIdentitiesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type GetIdentitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identities    []*GetIdentitiesResponse_Identity `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty"`
	NextPageToken string                            `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize     int32                             `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *GetIdentitiesResponse) Reset() {
	*x = GetIdentitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentitiesResponse) ProtoMessage() {}

func (x *GetIdentitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentitiesResponse.ProtoReflect.Descriptor instead.
func (*GetIdentitiesResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{3}
}

func (x *GetIdentitiesResponse) GetIdentities() []*GetIdentitiesResponse_Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

func (x *GetIdentitiesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetIdentitiesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type GetIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,2,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *GetIdentityRequest) Reset() {
	*x = GetIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityRequest) ProtoMessage() {}

func (x *GetIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{4}
}

func (x *GetIdentityRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type GetIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId     string                   `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	CreatedAt      *timestamp.Timestamp     `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp     `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	MainIdentifier string                   `protobuf:"bytes,4,opt,name=main_identifier,json=mainIdentifier,proto3" json:"main_identifier,omitempty"`
	TraitsId       string                   `protobuf:"bytes,5,opt,name=traits_id,json=traitsId,proto3" json:"traits_id,omitempty"`
	AddressesIds   []string                 `protobuf:"bytes,6,rep,name=addresses_ids,json=addressesIds,proto3" json:"addresses_ids,omitempty"`
	CredentialsIds map[string]string        `protobuf:"bytes,7,rep,name=credentials_ids,json=credentialsIds,proto3" json:"credentials_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SchemaId       string                   `protobuf:"bytes,8,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Lock           GetIdentityResponse_Lock `protobuf:"varint,9,opt,name=lock,proto3,enum=depot.devtools.auth.v0.identity.admin.GetIdentityResponse_Lock" json:"lock,omitempty"`
}

func (x *GetIdentityResponse) Reset() {
	*x = GetIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityResponse) ProtoMessage() {}

func (x *GetIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{5}
}

func (x *GetIdentityResponse) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetIdentityResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetIdentityResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetIdentityResponse) GetMainIdentifier() string {
	if x != nil {
		return x.MainIdentifier
	}
	return ""
}

func (x *GetIdentityResponse) GetTraitsId() string {
	if x != nil {
		return x.TraitsId
	}
	return ""
}

func (x *GetIdentityResponse) GetAddressesIds() []string {
	if x != nil {
		return x.AddressesIds
	}
	return nil
}

func (x *GetIdentityResponse) GetCredentialsIds() map[string]string {
	if x != nil {
		return x.CredentialsIds
	}
	return nil
}

func (x *GetIdentityResponse) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

func (x *GetIdentityResponse) GetLock() GetIdentityResponse_Lock {
	if x != nil {
		return x.Lock
	}
	return GetIdentityResponse_UNLOCKED
}

type GetIdentityByIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute    string `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Value        string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ConnectionId string `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *GetIdentityByIdentifierRequest) Reset() {
	*x = GetIdentityByIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityByIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityByIdentifierRequest) ProtoMessage() {}

func (x *GetIdentityByIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityByIdentifierRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityByIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{6}
}

func (x *GetIdentityByIdentifierRequest) GetAttribute() string {
	if x != nil {
		return x.Attribute
	}
	return ""
}

func (x *GetIdentityByIdentifierRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetIdentityByIdentifierRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type GetIdentityByIdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *GetIdentityByIdentifierResponse_Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *GetIdentityByIdentifierResponse) Reset() {
	*x = GetIdentityByIdentifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityByIdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityByIdentifierResponse) ProtoMessage() {}

func (x *GetIdentityByIdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityByIdentifierResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityByIdentifierResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{7}
}

func (x *GetIdentityByIdentifierResponse) GetIdentity() *GetIdentityByIdentifierResponse_Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

type GetIdentitiesByAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute string `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetIdentitiesByAttributeRequest) Reset() {
	*x = GetIdentitiesByAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentitiesByAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentitiesByAttributeRequest) ProtoMessage() {}

func (x *GetIdentitiesByAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentitiesByAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetIdentitiesByAttributeRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{8}
}

func (x *GetIdentitiesByAttributeRequest) GetAttribute() string {
	if x != nil {
		return x.Attribute
	}
	return ""
}

func (x *GetIdentitiesByAttributeRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetIdentitiesByAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identities []*GetIdentitiesByAttributeResponse_Identity `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty"`
}

func (x *GetIdentitiesByAttributeResponse) Reset() {
	*x = GetIdentitiesByAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentitiesByAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentitiesByAttributeResponse) ProtoMessage() {}

func (x *GetIdentitiesByAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentitiesByAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetIdentitiesByAttributeResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{9}
}

func (x *GetIdentitiesByAttributeResponse) GetIdentities() []*GetIdentitiesByAttributeResponse_Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

type UpdateIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string                     `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	Lock       UpdateIdentityRequest_Lock `protobuf:"varint,2,opt,name=lock,proto3,enum=depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest_Lock" json:"lock,omitempty"`
}

func (x *UpdateIdentityRequest) Reset() {
	*x = UpdateIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdentityRequest) ProtoMessage() {}

func (x *UpdateIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdentityRequest.ProtoReflect.Descriptor instead.
func (*UpdateIdentityRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateIdentityRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *UpdateIdentityRequest) GetLock() UpdateIdentityRequest_Lock {
	if x != nil {
		return x.Lock
	}
	return UpdateIdentityRequest_UNLOCKED
}

type UpdateIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIdentityResponse) Reset() {
	*x = UpdateIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdentityResponse) ProtoMessage() {}

func (x *UpdateIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdentityResponse.ProtoReflect.Descriptor instead.
func (*UpdateIdentityResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{11}
}

type DeleteIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *DeleteIdentityRequest) Reset() {
	*x = DeleteIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdentityRequest) ProtoMessage() {}

func (x *DeleteIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdentityRequest.ProtoReflect.Descriptor instead.
func (*DeleteIdentityRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteIdentityRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type DeleteIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteIdentityResponse) Reset() {
	*x = DeleteIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdentityResponse) ProtoMessage() {}

func (x *DeleteIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdentityResponse.ProtoReflect.Descriptor instead.
func (*DeleteIdentityResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{13}
}

type GetCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *GetCredentialsRequest) Reset() {
	*x = GetCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialsRequest) ProtoMessage() {}

func (x *GetCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialsRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{14}
}

func (x *GetCredentialsRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type GetCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials map[string]*GetCredentialsResponse_Credential `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetCredentialsResponse) Reset() {
	*x = GetCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialsResponse) ProtoMessage() {}

func (x *GetCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialsResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{15}
}

func (x *GetCredentialsResponse) GetCredentials() map[string]*GetCredentialsResponse_Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type UpdateCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data         *_struct.Struct `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ConnectionId string          `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	IdentityId   string          `protobuf:"bytes,3,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *UpdateCredentialRequest) Reset() {
	*x = UpdateCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCredentialRequest) ProtoMessage() {}

func (x *UpdateCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCredentialRequest.ProtoReflect.Descriptor instead.
func (*UpdateCredentialRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateCredentialRequest) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateCredentialRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *UpdateCredentialRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type UpdateCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCredentialResponse) Reset() {
	*x = UpdateCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCredentialResponse) ProtoMessage() {}

func (x *UpdateCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCredentialResponse.ProtoReflect.Descriptor instead.
func (*UpdateCredentialResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{17}
}

type CreateConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClientId         string                            `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret     string                            `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ButtonImageUrl   string                            `protobuf:"bytes,4,opt,name=button_image_url,json=buttonImageUrl,proto3" json:"button_image_url,omitempty"`
	Provider         CreateConnectionRequest_Providers `protobuf:"varint,6,opt,name=provider,proto3,enum=depot.devtools.auth.v0.identity.admin.CreateConnectionRequest_Providers" json:"provider,omitempty"`
	OidcDiscoveryUrl string                            `protobuf:"bytes,7,opt,name=oidc_discovery_url,json=oidcDiscoveryUrl,proto3" json:"oidc_discovery_url,omitempty"`
	Mfa              []string                          `protobuf:"bytes,8,rep,name=mfa,proto3" json:"mfa,omitempty"`
	Type             CreateConnectionRequest_Types     `protobuf:"varint,9,opt,name=type,proto3,enum=depot.devtools.auth.v0.identity.admin.CreateConnectionRequest_Types" json:"type,omitempty"`
	Scopes           string                            `protobuf:"bytes,10,opt,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *CreateConnectionRequest) Reset() {
	*x = CreateConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRequest) ProtoMessage() {}

func (x *CreateConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionRequest.ProtoReflect.Descriptor instead.
func (*CreateConnectionRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{18}
}

func (x *CreateConnectionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateConnectionRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CreateConnectionRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *CreateConnectionRequest) GetButtonImageUrl() string {
	if x != nil {
		return x.ButtonImageUrl
	}
	return ""
}

func (x *CreateConnectionRequest) GetProvider() CreateConnectionRequest_Providers {
	if x != nil {
		return x.Provider
	}
	return CreateConnectionRequest_NONE
}

func (x *CreateConnectionRequest) GetOidcDiscoveryUrl() string {
	if x != nil {
		return x.OidcDiscoveryUrl
	}
	return ""
}

func (x *CreateConnectionRequest) GetMfa() []string {
	if x != nil {
		return x.Mfa
	}
	return nil
}

func (x *CreateConnectionRequest) GetType() CreateConnectionRequest_Types {
	if x != nil {
		return x.Type
	}
	return CreateConnectionRequest_UNSET
}

func (x *CreateConnectionRequest) GetScopes() string {
	if x != nil {
		return x.Scopes
	}
	return ""
}

type CreateConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateConnectionResponse) Reset() {
	*x = CreateConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionResponse) ProtoMessage() {}

func (x *CreateConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionResponse.ProtoReflect.Descriptor instead.
func (*CreateConnectionResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{19}
}

func (x *CreateConnectionResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConnectionsRequest) Reset() {
	*x = GetConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionsRequest) ProtoMessage() {}

func (x *GetConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionsRequest.ProtoReflect.Descriptor instead.
func (*GetConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{20}
}

type GetConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections []*GetConnectionsResponse_Connection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *GetConnectionsResponse) Reset() {
	*x = GetConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionsResponse) ProtoMessage() {}

func (x *GetConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionsResponse.ProtoReflect.Descriptor instead.
func (*GetConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{21}
}

func (x *GetConnectionsResponse) GetConnections() []*GetConnectionsResponse_Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

type UpdateConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClientId         string                            `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret     string                            `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ButtonImageUrl   string                            `protobuf:"bytes,4,opt,name=button_image_url,json=buttonImageUrl,proto3" json:"button_image_url,omitempty"`
	Provider         UpdateConnectionRequest_Providers `protobuf:"varint,6,opt,name=provider,proto3,enum=depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest_Providers" json:"provider,omitempty"`
	OidcDiscoveryUrl string                            `protobuf:"bytes,7,opt,name=oidc_discovery_url,json=oidcDiscoveryUrl,proto3" json:"oidc_discovery_url,omitempty"`
	Mfa              []string                          `protobuf:"bytes,8,rep,name=mfa,proto3" json:"mfa,omitempty"`
	Type             UpdateConnectionRequest_Types     `protobuf:"varint,9,opt,name=type,proto3,enum=depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest_Types" json:"type,omitempty"`
	Id               string                            `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	Scopes           string                            `protobuf:"bytes,11,opt,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *UpdateConnectionRequest) Reset() {
	*x = UpdateConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConnectionRequest) ProtoMessage() {}

func (x *UpdateConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConnectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateConnectionRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateConnectionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateConnectionRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UpdateConnectionRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *UpdateConnectionRequest) GetButtonImageUrl() string {
	if x != nil {
		return x.ButtonImageUrl
	}
	return ""
}

func (x *UpdateConnectionRequest) GetProvider() UpdateConnectionRequest_Providers {
	if x != nil {
		return x.Provider
	}
	return UpdateConnectionRequest_NONE
}

func (x *UpdateConnectionRequest) GetOidcDiscoveryUrl() string {
	if x != nil {
		return x.OidcDiscoveryUrl
	}
	return ""
}

func (x *UpdateConnectionRequest) GetMfa() []string {
	if x != nil {
		return x.Mfa
	}
	return nil
}

func (x *UpdateConnectionRequest) GetType() UpdateConnectionRequest_Types {
	if x != nil {
		return x.Type
	}
	return UpdateConnectionRequest_UNSET
}

func (x *UpdateConnectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateConnectionRequest) GetScopes() string {
	if x != nil {
		return x.Scopes
	}
	return ""
}

type UpdateConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateConnectionResponse) Reset() {
	*x = UpdateConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConnectionResponse) ProtoMessage() {}

func (x *UpdateConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConnectionResponse.ProtoReflect.Descriptor instead.
func (*UpdateConnectionResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{23}
}

type DeleteConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteConnectionRequest) Reset() {
	*x = DeleteConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRequest) ProtoMessage() {}

func (x *DeleteConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionRequest.ProtoReflect.Descriptor instead.
func (*DeleteConnectionRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteConnectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConnectionResponse) Reset() {
	*x = DeleteConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionResponse) ProtoMessage() {}

func (x *DeleteConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionResponse.ProtoReflect.Descriptor instead.
func (*DeleteConnectionResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{25}
}

type GetOAuth2ClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOAuth2ClientsRequest) Reset() {
	*x = GetOAuth2ClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOAuth2ClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOAuth2ClientsRequest) ProtoMessage() {}

func (x *GetOAuth2ClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOAuth2ClientsRequest.ProtoReflect.Descriptor instead.
func (*GetOAuth2ClientsRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{26}
}

type GetOAuth2ClientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients []*GetOAuth2ClientsResponse_Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
}

func (x *GetOAuth2ClientsResponse) Reset() {
	*x = GetOAuth2ClientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOAuth2ClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOAuth2ClientsResponse) ProtoMessage() {}

func (x *GetOAuth2ClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOAuth2ClientsResponse.ProtoReflect.Descriptor instead.
func (*GetOAuth2ClientsResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{27}
}

func (x *GetOAuth2ClientsResponse) GetClients() []*GetOAuth2ClientsResponse_Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

type CreateOAuth2ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedCorsOrigins                []string                    `protobuf:"bytes,1,rep,name=allowed_cors_origins,json=allowedCorsOrigins,proto3" json:"allowed_cors_origins,omitempty"`
	Audience                          []string                    `protobuf:"bytes,2,rep,name=audience,proto3" json:"audience,omitempty"`
	BackchannelLogoutSessionRequired  bool                        `protobuf:"varint,3,opt,name=backchannel_logout_session_required,json=backchannelLogoutSessionRequired,proto3" json:"backchannel_logout_session_required,omitempty"`
	BackchannelLogoutUri              string                      `protobuf:"bytes,4,opt,name=backchannel_logout_uri,json=backchannelLogoutUri,proto3" json:"backchannel_logout_uri,omitempty"`
	ClientName                        string                      `protobuf:"bytes,6,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	ClientUri                         string                      `protobuf:"bytes,8,opt,name=client_uri,json=clientUri,proto3" json:"client_uri,omitempty"`
	Contacts                          []string                    `protobuf:"bytes,9,rep,name=contacts,proto3" json:"contacts,omitempty"`
	FrontchannelLogoutSessionRequired bool                        `protobuf:"varint,11,opt,name=frontchannel_logout_session_required,json=frontchannelLogoutSessionRequired,proto3" json:"frontchannel_logout_session_required,omitempty"`
	FrontchannelLogoutUri             string                      `protobuf:"bytes,12,opt,name=frontchannel_logout_uri,json=frontchannelLogoutUri,proto3" json:"frontchannel_logout_uri,omitempty"`
	GrantTypes                        []GrantType                 `protobuf:"varint,13,rep,packed,name=grant_types,json=grantTypes,proto3,enum=depot.devtools.auth.v0.identity.admin.GrantType" json:"grant_types,omitempty"`
	Jwks                              *_struct.Struct             `protobuf:"bytes,14,opt,name=jwks,proto3" json:"jwks,omitempty"`
	JwksUri                           string                      `protobuf:"bytes,15,opt,name=jwks_uri,json=jwksUri,proto3" json:"jwks_uri,omitempty"`
	LogoUri                           string                      `protobuf:"bytes,16,opt,name=logo_uri,json=logoUri,proto3" json:"logo_uri,omitempty"`
	Metadata                          *_struct.Struct             `protobuf:"bytes,17,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Owner                             string                      `protobuf:"bytes,18,opt,name=owner,proto3" json:"owner,omitempty"`
	PolicyUri                         string                      `protobuf:"bytes,19,opt,name=policy_uri,json=policyUri,proto3" json:"policy_uri,omitempty"`
	PostLogoutRedirectUris            []string                    `protobuf:"bytes,20,rep,name=post_logout_redirect_uris,json=postLogoutRedirectUris,proto3" json:"post_logout_redirect_uris,omitempty"`
	RedirectUris                      []string                    `protobuf:"bytes,21,rep,name=redirect_uris,json=redirectUris,proto3" json:"redirect_uris,omitempty"`
	RequestObjectSigningAlg           RequestObjectSigningAlg     `protobuf:"varint,22,opt,name=request_object_signing_alg,json=requestObjectSigningAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg" json:"request_object_signing_alg,omitempty"`
	RequestUris                       []string                    `protobuf:"bytes,23,rep,name=request_uris,json=requestUris,proto3" json:"request_uris,omitempty"`
	ResponseTypes                     []ResponseType              `protobuf:"varint,24,rep,packed,name=response_types,json=responseTypes,proto3,enum=depot.devtools.auth.v0.identity.admin.ResponseType" json:"response_types,omitempty"`
	Scope                             string                      `protobuf:"bytes,25,opt,name=scope,proto3" json:"scope,omitempty"`
	SectorIdentifierUri               string                      `protobuf:"bytes,26,opt,name=sector_identifier_uri,json=sectorIdentifierUri,proto3" json:"sector_identifier_uri,omitempty"`
	SubjectType                       SubjectType                 `protobuf:"varint,27,opt,name=subject_type,json=subjectType,proto3,enum=depot.devtools.auth.v0.identity.admin.SubjectType" json:"subject_type,omitempty"`
	TokenEndpointAuthMethod           TokenEndpointAuthMethod     `protobuf:"varint,28,opt,name=token_endpoint_auth_method,json=tokenEndpointAuthMethod,proto3,enum=depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod" json:"token_endpoint_auth_method,omitempty"`
	TokenEndpointAuthSigningAlg       TokenEndpointAuthSigningAlg `protobuf:"varint,29,opt,name=token_endpoint_auth_signing_alg,json=tokenEndpointAuthSigningAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg" json:"token_endpoint_auth_signing_alg,omitempty"`
	TosUri                            string                      `protobuf:"bytes,30,opt,name=tos_uri,json=tosUri,proto3" json:"tos_uri,omitempty"`
	UserinfoSignedResponseAlg         UserinfoSignedResponseAlg   `protobuf:"varint,31,opt,name=userinfo_signed_response_alg,json=userinfoSignedResponseAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg" json:"userinfo_signed_response_alg,omitempty"`
	ClientSecret                      string                      `protobuf:"bytes,32,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ClientType                        ClientType                  `protobuf:"varint,33,opt,name=client_type,json=clientType,proto3,enum=depot.devtools.auth.v0.identity.admin.ClientType" json:"client_type,omitempty"`
}

func (x *CreateOAuth2ClientRequest) Reset() {
	*x = CreateOAuth2ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOAuth2ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOAuth2ClientRequest) ProtoMessage() {}

func (x *CreateOAuth2ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOAuth2ClientRequest.ProtoReflect.Descriptor instead.
func (*CreateOAuth2ClientRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{28}
}

func (x *CreateOAuth2ClientRequest) GetAllowedCorsOrigins() []string {
	if x != nil {
		return x.AllowedCorsOrigins
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetBackchannelLogoutSessionRequired() bool {
	if x != nil {
		return x.BackchannelLogoutSessionRequired
	}
	return false
}

func (x *CreateOAuth2ClientRequest) GetBackchannelLogoutUri() string {
	if x != nil {
		return x.BackchannelLogoutUri
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetClientUri() string {
	if x != nil {
		return x.ClientUri
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetContacts() []string {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetFrontchannelLogoutSessionRequired() bool {
	if x != nil {
		return x.FrontchannelLogoutSessionRequired
	}
	return false
}

func (x *CreateOAuth2ClientRequest) GetFrontchannelLogoutUri() string {
	if x != nil {
		return x.FrontchannelLogoutUri
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetGrantTypes() []GrantType {
	if x != nil {
		return x.GrantTypes
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetJwks() *_struct.Struct {
	if x != nil {
		return x.Jwks
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetJwksUri() string {
	if x != nil {
		return x.JwksUri
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetLogoUri() string {
	if x != nil {
		return x.LogoUri
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetPolicyUri() string {
	if x != nil {
		return x.PolicyUri
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetPostLogoutRedirectUris() []string {
	if x != nil {
		return x.PostLogoutRedirectUris
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetRedirectUris() []string {
	if x != nil {
		return x.RedirectUris
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetRequestObjectSigningAlg() RequestObjectSigningAlg {
	if x != nil {
		return x.RequestObjectSigningAlg
	}
	return RequestObjectSigningAlg_REQUEST_OBJECT_SIGNING_ALG_UNSET
}

func (x *CreateOAuth2ClientRequest) GetRequestUris() []string {
	if x != nil {
		return x.RequestUris
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetResponseTypes() []ResponseType {
	if x != nil {
		return x.ResponseTypes
	}
	return nil
}

func (x *CreateOAuth2ClientRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetSectorIdentifierUri() string {
	if x != nil {
		return x.SectorIdentifierUri
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_PUBLIC
}

func (x *CreateOAuth2ClientRequest) GetTokenEndpointAuthMethod() TokenEndpointAuthMethod {
	if x != nil {
		return x.TokenEndpointAuthMethod
	}
	return TokenEndpointAuthMethod_TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC
}

func (x *CreateOAuth2ClientRequest) GetTokenEndpointAuthSigningAlg() TokenEndpointAuthSigningAlg {
	if x != nil {
		return x.TokenEndpointAuthSigningAlg
	}
	return TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET
}

func (x *CreateOAuth2ClientRequest) GetTosUri() string {
	if x != nil {
		return x.TosUri
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetUserinfoSignedResponseAlg() UserinfoSignedResponseAlg {
	if x != nil {
		return x.UserinfoSignedResponseAlg
	}
	return UserinfoSignedResponseAlg_USERINFO_SIGNED_RESPONSE_ALG_UNSET
}

func (x *CreateOAuth2ClientRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *CreateOAuth2ClientRequest) GetClientType() ClientType {
	if x != nil {
		return x.ClientType
	}
	return ClientType_CLIENT_TYPE_UNSET
}

type CreateOAuth2ClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *CreateOAuth2ClientResponse) Reset() {
	*x = CreateOAuth2ClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOAuth2ClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOAuth2ClientResponse) ProtoMessage() {}

func (x *CreateOAuth2ClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOAuth2ClientResponse.ProtoReflect.Descriptor instead.
func (*CreateOAuth2ClientResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{29}
}

func (x *CreateOAuth2ClientResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CreateOAuth2ClientResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type UpdateOAuth2ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedCorsOrigins                []string                    `protobuf:"bytes,1,rep,name=allowed_cors_origins,json=allowedCorsOrigins,proto3" json:"allowed_cors_origins,omitempty"`
	Audience                          []string                    `protobuf:"bytes,2,rep,name=audience,proto3" json:"audience,omitempty"`
	BackchannelLogoutSessionRequired  bool                        `protobuf:"varint,3,opt,name=backchannel_logout_session_required,json=backchannelLogoutSessionRequired,proto3" json:"backchannel_logout_session_required,omitempty"`
	BackchannelLogoutUri              string                      `protobuf:"bytes,4,opt,name=backchannel_logout_uri,json=backchannelLogoutUri,proto3" json:"backchannel_logout_uri,omitempty"`
	ClientName                        string                      `protobuf:"bytes,6,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	ClientUri                         string                      `protobuf:"bytes,8,opt,name=client_uri,json=clientUri,proto3" json:"client_uri,omitempty"`
	Contacts                          []string                    `protobuf:"bytes,9,rep,name=contacts,proto3" json:"contacts,omitempty"`
	FrontchannelLogoutSessionRequired bool                        `protobuf:"varint,11,opt,name=frontchannel_logout_session_required,json=frontchannelLogoutSessionRequired,proto3" json:"frontchannel_logout_session_required,omitempty"`
	FrontchannelLogoutUri             string                      `protobuf:"bytes,12,opt,name=frontchannel_logout_uri,json=frontchannelLogoutUri,proto3" json:"frontchannel_logout_uri,omitempty"`
	GrantTypes                        []GrantType                 `protobuf:"varint,13,rep,packed,name=grant_types,json=grantTypes,proto3,enum=depot.devtools.auth.v0.identity.admin.GrantType" json:"grant_types,omitempty"`
	Jwks                              *_struct.Struct             `protobuf:"bytes,14,opt,name=jwks,proto3" json:"jwks,omitempty"`
	JwksUri                           string                      `protobuf:"bytes,15,opt,name=jwks_uri,json=jwksUri,proto3" json:"jwks_uri,omitempty"`
	LogoUri                           string                      `protobuf:"bytes,16,opt,name=logo_uri,json=logoUri,proto3" json:"logo_uri,omitempty"`
	Metadata                          *_struct.Struct             `protobuf:"bytes,17,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Owner                             string                      `protobuf:"bytes,18,opt,name=owner,proto3" json:"owner,omitempty"`
	PolicyUri                         string                      `protobuf:"bytes,19,opt,name=policy_uri,json=policyUri,proto3" json:"policy_uri,omitempty"`
	PostLogoutRedirectUris            []string                    `protobuf:"bytes,20,rep,name=post_logout_redirect_uris,json=postLogoutRedirectUris,proto3" json:"post_logout_redirect_uris,omitempty"`
	RedirectUris                      []string                    `protobuf:"bytes,21,rep,name=redirect_uris,json=redirectUris,proto3" json:"redirect_uris,omitempty"`
	RequestObjectSigningAlg           RequestObjectSigningAlg     `protobuf:"varint,22,opt,name=request_object_signing_alg,json=requestObjectSigningAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg" json:"request_object_signing_alg,omitempty"`
	RequestUris                       []string                    `protobuf:"bytes,23,rep,name=request_uris,json=requestUris,proto3" json:"request_uris,omitempty"`
	ResponseTypes                     []ResponseType              `protobuf:"varint,24,rep,packed,name=response_types,json=responseTypes,proto3,enum=depot.devtools.auth.v0.identity.admin.ResponseType" json:"response_types,omitempty"`
	Scope                             string                      `protobuf:"bytes,25,opt,name=scope,proto3" json:"scope,omitempty"`
	SectorIdentifierUri               string                      `protobuf:"bytes,26,opt,name=sector_identifier_uri,json=sectorIdentifierUri,proto3" json:"sector_identifier_uri,omitempty"`
	SubjectType                       SubjectType                 `protobuf:"varint,27,opt,name=subject_type,json=subjectType,proto3,enum=depot.devtools.auth.v0.identity.admin.SubjectType" json:"subject_type,omitempty"`
	TokenEndpointAuthMethod           TokenEndpointAuthMethod     `protobuf:"varint,28,opt,name=token_endpoint_auth_method,json=tokenEndpointAuthMethod,proto3,enum=depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod" json:"token_endpoint_auth_method,omitempty"`
	TokenEndpointAuthSigningAlg       TokenEndpointAuthSigningAlg `protobuf:"varint,29,opt,name=token_endpoint_auth_signing_alg,json=tokenEndpointAuthSigningAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg" json:"token_endpoint_auth_signing_alg,omitempty"`
	TosUri                            string                      `protobuf:"bytes,30,opt,name=tos_uri,json=tosUri,proto3" json:"tos_uri,omitempty"`
	UserinfoSignedResponseAlg         UserinfoSignedResponseAlg   `protobuf:"varint,31,opt,name=userinfo_signed_response_alg,json=userinfoSignedResponseAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg" json:"userinfo_signed_response_alg,omitempty"`
	ClientSecret                      string                      `protobuf:"bytes,32,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ClientId                          string                      `protobuf:"bytes,33,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *UpdateOAuth2ClientRequest) Reset() {
	*x = UpdateOAuth2ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOAuth2ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOAuth2ClientRequest) ProtoMessage() {}

func (x *UpdateOAuth2ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOAuth2ClientRequest.ProtoReflect.Descriptor instead.
func (*UpdateOAuth2ClientRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateOAuth2ClientRequest) GetAllowedCorsOrigins() []string {
	if x != nil {
		return x.AllowedCorsOrigins
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetBackchannelLogoutSessionRequired() bool {
	if x != nil {
		return x.BackchannelLogoutSessionRequired
	}
	return false
}

func (x *UpdateOAuth2ClientRequest) GetBackchannelLogoutUri() string {
	if x != nil {
		return x.BackchannelLogoutUri
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetClientUri() string {
	if x != nil {
		return x.ClientUri
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetContacts() []string {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetFrontchannelLogoutSessionRequired() bool {
	if x != nil {
		return x.FrontchannelLogoutSessionRequired
	}
	return false
}

func (x *UpdateOAuth2ClientRequest) GetFrontchannelLogoutUri() string {
	if x != nil {
		return x.FrontchannelLogoutUri
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetGrantTypes() []GrantType {
	if x != nil {
		return x.GrantTypes
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetJwks() *_struct.Struct {
	if x != nil {
		return x.Jwks
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetJwksUri() string {
	if x != nil {
		return x.JwksUri
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetLogoUri() string {
	if x != nil {
		return x.LogoUri
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetPolicyUri() string {
	if x != nil {
		return x.PolicyUri
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetPostLogoutRedirectUris() []string {
	if x != nil {
		return x.PostLogoutRedirectUris
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetRedirectUris() []string {
	if x != nil {
		return x.RedirectUris
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetRequestObjectSigningAlg() RequestObjectSigningAlg {
	if x != nil {
		return x.RequestObjectSigningAlg
	}
	return RequestObjectSigningAlg_REQUEST_OBJECT_SIGNING_ALG_UNSET
}

func (x *UpdateOAuth2ClientRequest) GetRequestUris() []string {
	if x != nil {
		return x.RequestUris
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetResponseTypes() []ResponseType {
	if x != nil {
		return x.ResponseTypes
	}
	return nil
}

func (x *UpdateOAuth2ClientRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetSectorIdentifierUri() string {
	if x != nil {
		return x.SectorIdentifierUri
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_PUBLIC
}

func (x *UpdateOAuth2ClientRequest) GetTokenEndpointAuthMethod() TokenEndpointAuthMethod {
	if x != nil {
		return x.TokenEndpointAuthMethod
	}
	return TokenEndpointAuthMethod_TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC
}

func (x *UpdateOAuth2ClientRequest) GetTokenEndpointAuthSigningAlg() TokenEndpointAuthSigningAlg {
	if x != nil {
		return x.TokenEndpointAuthSigningAlg
	}
	return TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET
}

func (x *UpdateOAuth2ClientRequest) GetTosUri() string {
	if x != nil {
		return x.TosUri
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetUserinfoSignedResponseAlg() UserinfoSignedResponseAlg {
	if x != nil {
		return x.UserinfoSignedResponseAlg
	}
	return UserinfoSignedResponseAlg_USERINFO_SIGNED_RESPONSE_ALG_UNSET
}

func (x *UpdateOAuth2ClientRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type UpdateOAuth2ClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *UpdateOAuth2ClientResponse) Reset() {
	*x = UpdateOAuth2ClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOAuth2ClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOAuth2ClientResponse) ProtoMessage() {}

func (x *UpdateOAuth2ClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOAuth2ClientResponse.ProtoReflect.Descriptor instead.
func (*UpdateOAuth2ClientResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateOAuth2ClientResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UpdateOAuth2ClientResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type DeleteOAuth2ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *DeleteOAuth2ClientRequest) Reset() {
	*x = DeleteOAuth2ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOAuth2ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOAuth2ClientRequest) ProtoMessage() {}

func (x *DeleteOAuth2ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOAuth2ClientRequest.ProtoReflect.Descriptor instead.
func (*DeleteOAuth2ClientRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteOAuth2ClientRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type DeleteOAuth2ClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteOAuth2ClientResponse) Reset() {
	*x = DeleteOAuth2ClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOAuth2ClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOAuth2ClientResponse) ProtoMessage() {}

func (x *DeleteOAuth2ClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOAuth2ClientResponse.ProtoReflect.Descriptor instead.
func (*DeleteOAuth2ClientResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{33}
}

type GetAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *GetAddressesRequest) Reset() {
	*x = GetAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressesRequest) ProtoMessage() {}

func (x *GetAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetAddressesRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{34}
}

func (x *GetAddressesRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type GetAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []*GetAddressesResponse_Address `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *GetAddressesResponse) Reset() {
	*x = GetAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressesResponse) ProtoMessage() {}

func (x *GetAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetAddressesResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{35}
}

func (x *GetAddressesResponse) GetAddresses() []*GetAddressesResponse_Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GetAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Match:
	//	*GetAddressRequest_Id
	//	*GetAddressRequest_Verification
	Match isGetAddressRequest_Match `protobuf_oneof:"match"`
}

func (x *GetAddressRequest) Reset() {
	*x = GetAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressRequest) ProtoMessage() {}

func (x *GetAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressRequest.ProtoReflect.Descriptor instead.
func (*GetAddressRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{36}
}

func (m *GetAddressRequest) GetMatch() isGetAddressRequest_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (x *GetAddressRequest) GetId() string {
	if x, ok := x.GetMatch().(*GetAddressRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (x *GetAddressRequest) GetVerification() string {
	if x, ok := x.GetMatch().(*GetAddressRequest_Verification); ok {
		return x.Verification
	}
	return ""
}

type isGetAddressRequest_Match interface {
	isGetAddressRequest_Match()
}

type GetAddressRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type GetAddressRequest_Verification struct {
	Verification string `protobuf:"bytes,2,opt,name=verification,proto3,oneof"`
}

func (*GetAddressRequest_Id) isGetAddressRequest_Match() {}

func (*GetAddressRequest_Verification) isGetAddressRequest_Match() {}

type GetAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IdentityId  string `protobuf:"bytes,2,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address     string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Verified    bool   `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
	IdSchemaKey string `protobuf:"bytes,6,opt,name=id_schema_key,json=idSchemaKey,proto3" json:"id_schema_key,omitempty"`
}

func (x *GetAddressResponse) Reset() {
	*x = GetAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressResponse) ProtoMessage() {}

func (x *GetAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressResponse.ProtoReflect.Descriptor instead.
func (*GetAddressResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{37}
}

func (x *GetAddressResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAddressResponse) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetAddressResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetAddressResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *GetAddressResponse) GetIdSchemaKey() string {
	if x != nil {
		return x.IdSchemaKey
	}
	return ""
}

type UpdateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Attribute:
	//	*UpdateAddressRequest_Verified
	//	*UpdateAddressRequest_Address
	Attribute isUpdateAddressRequest_Attribute `protobuf_oneof:"attribute"`
}

func (x *UpdateAddressRequest) Reset() {
	*x = UpdateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressRequest) ProtoMessage() {}

func (x *UpdateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateAddressRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateAddressRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *UpdateAddressRequest) GetAttribute() isUpdateAddressRequest_Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (x *UpdateAddressRequest) GetVerified() bool {
	if x, ok := x.GetAttribute().(*UpdateAddressRequest_Verified); ok {
		return x.Verified
	}
	return false
}

func (x *UpdateAddressRequest) GetAddress() string {
	if x, ok := x.GetAttribute().(*UpdateAddressRequest_Address); ok {
		return x.Address
	}
	return ""
}

type isUpdateAddressRequest_Attribute interface {
	isUpdateAddressRequest_Attribute()
}

type UpdateAddressRequest_Verified struct {
	Verified bool `protobuf:"varint,2,opt,name=verified,proto3,oneof"`
}

type UpdateAddressRequest_Address struct {
	Address string `protobuf:"bytes,3,opt,name=address,proto3,oneof"`
}

func (*UpdateAddressRequest_Verified) isUpdateAddressRequest_Attribute() {}

func (*UpdateAddressRequest_Address) isUpdateAddressRequest_Attribute() {}

type UpdateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAddressResponse) Reset() {
	*x = UpdateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressResponse) ProtoMessage() {}

func (x *UpdateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressResponse.ProtoReflect.Descriptor instead.
func (*UpdateAddressResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{39}
}

type GetTraitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *GetTraitsRequest) Reset() {
	*x = GetTraitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTraitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraitsRequest) ProtoMessage() {}

func (x *GetTraitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraitsRequest.ProtoReflect.Descriptor instead.
func (*GetTraitsRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{40}
}

func (x *GetTraitsRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type GetTraitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traits string `protobuf:"bytes,1,opt,name=traits,proto3" json:"traits,omitempty"`
}

func (x *GetTraitsResponse) Reset() {
	*x = GetTraitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTraitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraitsResponse) ProtoMessage() {}

func (x *GetTraitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraitsResponse.ProtoReflect.Descriptor instead.
func (*GetTraitsResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{41}
}

func (x *GetTraitsResponse) GetTraits() string {
	if x != nil {
		return x.Traits
	}
	return ""
}

type UpdateTraitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	Traits     string `protobuf:"bytes,2,opt,name=traits,proto3" json:"traits,omitempty"`
}

func (x *UpdateTraitsRequest) Reset() {
	*x = UpdateTraitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTraitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTraitsRequest) ProtoMessage() {}

func (x *UpdateTraitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTraitsRequest.ProtoReflect.Descriptor instead.
func (*UpdateTraitsRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateTraitsRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *UpdateTraitsRequest) GetTraits() string {
	if x != nil {
		return x.Traits
	}
	return ""
}

type UpdateTraitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTraitsResponse) Reset() {
	*x = UpdateTraitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTraitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTraitsResponse) ProtoMessage() {}

func (x *UpdateTraitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTraitsResponse.ProtoReflect.Descriptor instead.
func (*UpdateTraitsResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{43}
}

type GetIdentityLoginAttemptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId string `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *GetIdentityLoginAttemptsRequest) Reset() {
	*x = GetIdentityLoginAttemptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityLoginAttemptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityLoginAttemptsRequest) ProtoMessage() {}

func (x *GetIdentityLoginAttemptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityLoginAttemptsRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityLoginAttemptsRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{44}
}

func (x *GetIdentityLoginAttemptsRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

type GetIdentityLoginAttemptsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attempts []*GetIdentityLoginAttemptsResponse_Attempt `protobuf:"bytes,1,rep,name=attempts,proto3" json:"attempts,omitempty"`
}

func (x *GetIdentityLoginAttemptsResponse) Reset() {
	*x = GetIdentityLoginAttemptsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityLoginAttemptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityLoginAttemptsResponse) ProtoMessage() {}

func (x *GetIdentityLoginAttemptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityLoginAttemptsResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityLoginAttemptsResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{45}
}

func (x *GetIdentityLoginAttemptsResponse) GetAttempts() []*GetIdentityLoginAttemptsResponse_Attempt {
	if x != nil {
		return x.Attempts
	}
	return nil
}

type CreateIdSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content *_struct.Struct `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CreateIdSchemaRequest) Reset() {
	*x = CreateIdSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdSchemaRequest) ProtoMessage() {}

func (x *CreateIdSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdSchemaRequest.ProtoReflect.Descriptor instead.
func (*CreateIdSchemaRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{46}
}

func (x *CreateIdSchemaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIdSchemaRequest) GetContent() *_struct.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

type CreateIdSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateIdSchemaResponse) Reset() {
	*x = CreateIdSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdSchemaResponse) ProtoMessage() {}

func (x *CreateIdSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdSchemaResponse.ProtoReflect.Descriptor instead.
func (*CreateIdSchemaResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{47}
}

func (x *CreateIdSchemaResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetIdSchemasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetIdSchemasRequest) Reset() {
	*x = GetIdSchemasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdSchemasRequest) ProtoMessage() {}

func (x *GetIdSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdSchemasRequest.ProtoReflect.Descriptor instead.
func (*GetIdSchemasRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{48}
}

type GetIdSchemasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jsonschemas []*GetIdSchemasResponse_JsonSchema `protobuf:"bytes,1,rep,name=jsonschemas,proto3" json:"jsonschemas,omitempty"`
}

func (x *GetIdSchemasResponse) Reset() {
	*x = GetIdSchemasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdSchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdSchemasResponse) ProtoMessage() {}

func (x *GetIdSchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdSchemasResponse.ProtoReflect.Descriptor instead.
func (*GetIdSchemasResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{49}
}

func (x *GetIdSchemasResponse) GetJsonschemas() []*GetIdSchemasResponse_JsonSchema {
	if x != nil {
		return x.Jsonschemas
	}
	return nil
}

type GetIdSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetIdSchemaRequest) Reset() {
	*x = GetIdSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdSchemaRequest) ProtoMessage() {}

func (x *GetIdSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetIdSchemaRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{50}
}

func (x *GetIdSchemaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetIdSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content   *_struct.Struct      `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsDefault bool                 `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetIdSchemaResponse) Reset() {
	*x = GetIdSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdSchemaResponse) ProtoMessage() {}

func (x *GetIdSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetIdSchemaResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{51}
}

func (x *GetIdSchemaResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetIdSchemaResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIdSchemaResponse) GetContent() *_struct.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetIdSchemaResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetIdSchemaResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetIdSchemaResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type GetDefaultIdSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultIdSchemaRequest) Reset() {
	*x = GetDefaultIdSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultIdSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultIdSchemaRequest) ProtoMessage() {}

func (x *GetDefaultIdSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultIdSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultIdSchemaRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{52}
}

type GetDefaultIdSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content   *_struct.Struct      `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsDefault bool                 `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetDefaultIdSchemaResponse) Reset() {
	*x = GetDefaultIdSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultIdSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultIdSchemaResponse) ProtoMessage() {}

func (x *GetDefaultIdSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultIdSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultIdSchemaResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{53}
}

func (x *GetDefaultIdSchemaResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDefaultIdSchemaResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDefaultIdSchemaResponse) GetContent() *_struct.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetDefaultIdSchemaResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetDefaultIdSchemaResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetDefaultIdSchemaResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type UpdateIdSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content *_struct.Struct `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UpdateIdSchemaRequest) Reset() {
	*x = UpdateIdSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdSchemaRequest) ProtoMessage() {}

func (x *UpdateIdSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdSchemaRequest.ProtoReflect.Descriptor instead.
func (*UpdateIdSchemaRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateIdSchemaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateIdSchemaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateIdSchemaRequest) GetContent() *_struct.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

type UpdateIdSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIdSchemaResponse) Reset() {
	*x = UpdateIdSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdSchemaResponse) ProtoMessage() {}

func (x *UpdateIdSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdSchemaResponse.ProtoReflect.Descriptor instead.
func (*UpdateIdSchemaResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{55}
}

type MarkDefaultIdSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MarkDefaultIdSchemaRequest) Reset() {
	*x = MarkDefaultIdSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkDefaultIdSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkDefaultIdSchemaRequest) ProtoMessage() {}

func (x *MarkDefaultIdSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkDefaultIdSchemaRequest.ProtoReflect.Descriptor instead.
func (*MarkDefaultIdSchemaRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{56}
}

func (x *MarkDefaultIdSchemaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MarkDefaultIdSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkDefaultIdSchemaResponse) Reset() {
	*x = MarkDefaultIdSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkDefaultIdSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkDefaultIdSchemaResponse) ProtoMessage() {}

func (x *MarkDefaultIdSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkDefaultIdSchemaResponse.ProtoReflect.Descriptor instead.
func (*MarkDefaultIdSchemaResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{57}
}

type DeleteIdSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteIdSchemaRequest) Reset() {
	*x = DeleteIdSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdSchemaRequest) ProtoMessage() {}

func (x *DeleteIdSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdSchemaRequest.ProtoReflect.Descriptor instead.
func (*DeleteIdSchemaRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteIdSchemaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteIdSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteIdSchemaResponse) Reset() {
	*x = DeleteIdSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdSchemaResponse) ProtoMessage() {}

func (x *DeleteIdSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdSchemaResponse.ProtoReflect.Descriptor instead.
func (*DeleteIdSchemaResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{59}
}

type GetEmailsSetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEmailsSetupRequest) Reset() {
	*x = GetEmailsSetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailsSetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailsSetupRequest) ProtoMessage() {}

func (x *GetEmailsSetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailsSetupRequest.ProtoReflect.Descriptor instead.
func (*GetEmailsSetupRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{60}
}

type GetEmailsSetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Welcome             *GetEmailsSetupResponse_EmailTemplate `protobuf:"bytes,1,opt,name=welcome,proto3" json:"welcome,omitempty"`
	AccountVerification *GetEmailsSetupResponse_EmailTemplate `protobuf:"bytes,2,opt,name=account_verification,json=accountVerification,proto3" json:"account_verification,omitempty"`
	AccountRecovery     *GetEmailsSetupResponse_EmailTemplate `protobuf:"bytes,3,opt,name=account_recovery,json=accountRecovery,proto3" json:"account_recovery,omitempty"`
	AccountRecovered    *GetEmailsSetupResponse_EmailTemplate `protobuf:"bytes,4,opt,name=account_recovered,json=accountRecovered,proto3" json:"account_recovered,omitempty"`
	Otp                 *GetEmailsSetupResponse_EmailTemplate `protobuf:"bytes,5,opt,name=otp,proto3" json:"otp,omitempty"`
	Smtp                *GetEmailsSetupResponse_EmailSender   `protobuf:"bytes,6,opt,name=smtp,proto3" json:"smtp,omitempty"`
	ProjectId           string                                `protobuf:"bytes,7,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetEmailsSetupResponse) Reset() {
	*x = GetEmailsSetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailsSetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailsSetupResponse) ProtoMessage() {}

func (x *GetEmailsSetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailsSetupResponse.ProtoReflect.Descriptor instead.
func (*GetEmailsSetupResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{61}
}

func (x *GetEmailsSetupResponse) GetWelcome() *GetEmailsSetupResponse_EmailTemplate {
	if x != nil {
		return x.Welcome
	}
	return nil
}

func (x *GetEmailsSetupResponse) GetAccountVerification() *GetEmailsSetupResponse_EmailTemplate {
	if x != nil {
		return x.AccountVerification
	}
	return nil
}

func (x *GetEmailsSetupResponse) GetAccountRecovery() *GetEmailsSetupResponse_EmailTemplate {
	if x != nil {
		return x.AccountRecovery
	}
	return nil
}

func (x *GetEmailsSetupResponse) GetAccountRecovered() *GetEmailsSetupResponse_EmailTemplate {
	if x != nil {
		return x.AccountRecovered
	}
	return nil
}

func (x *GetEmailsSetupResponse) GetOtp() *GetEmailsSetupResponse_EmailTemplate {
	if x != nil {
		return x.Otp
	}
	return nil
}

func (x *GetEmailsSetupResponse) GetSmtp() *GetEmailsSetupResponse_EmailSender {
	if x != nil {
		return x.Smtp
	}
	return nil
}

func (x *GetEmailsSetupResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type UpdateEmailsSetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Welcome             *UpdateEmailsSetupRequest_EmailTemplate `protobuf:"bytes,1,opt,name=welcome,proto3" json:"welcome,omitempty"`
	AccountVerification *UpdateEmailsSetupRequest_EmailTemplate `protobuf:"bytes,2,opt,name=account_verification,json=accountVerification,proto3" json:"account_verification,omitempty"`
	AccountRecovery     *UpdateEmailsSetupRequest_EmailTemplate `protobuf:"bytes,3,opt,name=account_recovery,json=accountRecovery,proto3" json:"account_recovery,omitempty"`
	AccountRecovered    *UpdateEmailsSetupRequest_EmailTemplate `protobuf:"bytes,4,opt,name=account_recovered,json=accountRecovered,proto3" json:"account_recovered,omitempty"`
	Otp                 *UpdateEmailsSetupRequest_EmailTemplate `protobuf:"bytes,5,opt,name=otp,proto3" json:"otp,omitempty"`
	Smtp                *UpdateEmailsSetupRequest_EmailSender   `protobuf:"bytes,6,opt,name=smtp,proto3" json:"smtp,omitempty"`
}

func (x *UpdateEmailsSetupRequest) Reset() {
	*x = UpdateEmailsSetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailsSetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailsSetupRequest) ProtoMessage() {}

func (x *UpdateEmailsSetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailsSetupRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmailsSetupRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateEmailsSetupRequest) GetWelcome() *UpdateEmailsSetupRequest_EmailTemplate {
	if x != nil {
		return x.Welcome
	}
	return nil
}

func (x *UpdateEmailsSetupRequest) GetAccountVerification() *UpdateEmailsSetupRequest_EmailTemplate {
	if x != nil {
		return x.AccountVerification
	}
	return nil
}

func (x *UpdateEmailsSetupRequest) GetAccountRecovery() *UpdateEmailsSetupRequest_EmailTemplate {
	if x != nil {
		return x.AccountRecovery
	}
	return nil
}

func (x *UpdateEmailsSetupRequest) GetAccountRecovered() *UpdateEmailsSetupRequest_EmailTemplate {
	if x != nil {
		return x.AccountRecovered
	}
	return nil
}

func (x *UpdateEmailsSetupRequest) GetOtp() *UpdateEmailsSetupRequest_EmailTemplate {
	if x != nil {
		return x.Otp
	}
	return nil
}

func (x *UpdateEmailsSetupRequest) GetSmtp() *UpdateEmailsSetupRequest_EmailSender {
	if x != nil {
		return x.Smtp
	}
	return nil
}

type UpdateEmailsSetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEmailsSetupResponse) Reset() {
	*x = UpdateEmailsSetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailsSetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailsSetupResponse) ProtoMessage() {}

func (x *UpdateEmailsSetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailsSetupResponse.ProtoReflect.Descriptor instead.
func (*UpdateEmailsSetupResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{63}
}

type GetUserBaseStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaysBefore      uint32               `protobuf:"varint,1,opt,name=days_before,json=daysBefore,proto3" json:"days_before,omitempty"`
	LifetimeStartAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=lifetime_start_at,json=lifetimeStartAt,proto3" json:"lifetime_start_at,omitempty"`
	LifetimeEndAt   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=lifetime_end_at,json=lifetimeEndAt,proto3" json:"lifetime_end_at,omitempty"`
}

func (x *GetUserBaseStatisticsRequest) Reset() {
	*x = GetUserBaseStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBaseStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBaseStatisticsRequest) ProtoMessage() {}

func (x *GetUserBaseStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBaseStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetUserBaseStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{64}
}

func (x *GetUserBaseStatisticsRequest) GetDaysBefore() uint32 {
	if x != nil {
		return x.DaysBefore
	}
	return 0
}

func (x *GetUserBaseStatisticsRequest) GetLifetimeStartAt() *timestamp.Timestamp {
	if x != nil {
		return x.LifetimeStartAt
	}
	return nil
}

func (x *GetUserBaseStatisticsRequest) GetLifetimeEndAt() *timestamp.Timestamp {
	if x != nil {
		return x.LifetimeEndAt
	}
	return nil
}

type GetUserBaseStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUsers        int32            `protobuf:"varint,1,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	UsersPerDay       map[string]int32 `protobuf:"bytes,2,rep,name=users_per_day,json=usersPerDay,proto3" json:"users_per_day,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SessionsPerDay    map[string]int32 `protobuf:"bytes,3,rep,name=sessions_per_day,json=sessionsPerDay,proto3" json:"sessions_per_day,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TotalActiveUsers  int32            `protobuf:"varint,4,opt,name=total_active_users,json=totalActiveUsers,proto3" json:"total_active_users,omitempty"`
	TotalLifetimeUsed float64          `protobuf:"fixed64,5,opt,name=total_lifetime_used,json=totalLifetimeUsed,proto3" json:"total_lifetime_used,omitempty"`
}

func (x *GetUserBaseStatisticsResponse) Reset() {
	*x = GetUserBaseStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBaseStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBaseStatisticsResponse) ProtoMessage() {}

func (x *GetUserBaseStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBaseStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetUserBaseStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{65}
}

func (x *GetUserBaseStatisticsResponse) GetTotalUsers() int32 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *GetUserBaseStatisticsResponse) GetUsersPerDay() map[string]int32 {
	if x != nil {
		return x.UsersPerDay
	}
	return nil
}

func (x *GetUserBaseStatisticsResponse) GetSessionsPerDay() map[string]int32 {
	if x != nil {
		return x.SessionsPerDay
	}
	return nil
}

func (x *GetUserBaseStatisticsResponse) GetTotalActiveUsers() int32 {
	if x != nil {
		return x.TotalActiveUsers
	}
	return 0
}

func (x *GetUserBaseStatisticsResponse) GetTotalLifetimeUsed() float64 {
	if x != nil {
		return x.TotalLifetimeUsed
	}
	return 0
}

type GetIdentitiesResponse_Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId     string                     `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	CreatedAt      *timestamp.Timestamp       `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp       `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	MainIdentifier string                     `protobuf:"bytes,4,opt,name=main_identifier,json=mainIdentifier,proto3" json:"main_identifier,omitempty"`
	SchemaId       string                     `protobuf:"bytes,5,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Lock           GetIdentitiesResponse_Lock `protobuf:"varint,6,opt,name=lock,proto3,enum=depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse_Lock" json:"lock,omitempty"`
}

func (x *GetIdentitiesResponse_Identity) Reset() {
	*x = GetIdentitiesResponse_Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentitiesResponse_Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentitiesResponse_Identity) ProtoMessage() {}

func (x *GetIdentitiesResponse_Identity) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentitiesResponse_Identity.ProtoReflect.Descriptor instead.
func (*GetIdentitiesResponse_Identity) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetIdentitiesResponse_Identity) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetIdentitiesResponse_Identity) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetIdentitiesResponse_Identity) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetIdentitiesResponse_Identity) GetMainIdentifier() string {
	if x != nil {
		return x.MainIdentifier
	}
	return ""
}

func (x *GetIdentitiesResponse_Identity) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

func (x *GetIdentitiesResponse_Identity) GetLock() GetIdentitiesResponse_Lock {
	if x != nil {
		return x.Lock
	}
	return GetIdentitiesResponse_UNLOCKED
}

type GetIdentityByIdentifierResponse_Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId     string                                        `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	CreatedAt      *timestamp.Timestamp                          `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp                          `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	MainIdentifier string                                        `protobuf:"bytes,4,opt,name=main_identifier,json=mainIdentifier,proto3" json:"main_identifier,omitempty"`
	TraitsId       string                                        `protobuf:"bytes,5,opt,name=traits_id,json=traitsId,proto3" json:"traits_id,omitempty"`
	AddressesIds   []string                                      `protobuf:"bytes,6,rep,name=addresses_ids,json=addressesIds,proto3" json:"addresses_ids,omitempty"`
	CredentialsIds map[string]string                             `protobuf:"bytes,7,rep,name=credentials_ids,json=credentialsIds,proto3" json:"credentials_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SchemaId       string                                        `protobuf:"bytes,8,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Lock           GetIdentityByIdentifierResponse_Identity_Lock `protobuf:"varint,9,opt,name=lock,proto3,enum=depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse_Identity_Lock" json:"lock,omitempty"`
}

func (x *GetIdentityByIdentifierResponse_Identity) Reset() {
	*x = GetIdentityByIdentifierResponse_Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityByIdentifierResponse_Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityByIdentifierResponse_Identity) ProtoMessage() {}

func (x *GetIdentityByIdentifierResponse_Identity) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityByIdentifierResponse_Identity.ProtoReflect.Descriptor instead.
func (*GetIdentityByIdentifierResponse_Identity) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetIdentityByIdentifierResponse_Identity) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetIdentityByIdentifierResponse_Identity) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetIdentityByIdentifierResponse_Identity) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetIdentityByIdentifierResponse_Identity) GetMainIdentifier() string {
	if x != nil {
		return x.MainIdentifier
	}
	return ""
}

func (x *GetIdentityByIdentifierResponse_Identity) GetTraitsId() string {
	if x != nil {
		return x.TraitsId
	}
	return ""
}

func (x *GetIdentityByIdentifierResponse_Identity) GetAddressesIds() []string {
	if x != nil {
		return x.AddressesIds
	}
	return nil
}

func (x *GetIdentityByIdentifierResponse_Identity) GetCredentialsIds() map[string]string {
	if x != nil {
		return x.CredentialsIds
	}
	return nil
}

func (x *GetIdentityByIdentifierResponse_Identity) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

func (x *GetIdentityByIdentifierResponse_Identity) GetLock() GetIdentityByIdentifierResponse_Identity_Lock {
	if x != nil {
		return x.Lock
	}
	return GetIdentityByIdentifierResponse_Identity_UNLOCKED
}

type GetIdentitiesByAttributeResponse_Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityId     string                                         `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	CreatedAt      *timestamp.Timestamp                           `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp                           `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	MainIdentifier string                                         `protobuf:"bytes,4,opt,name=main_identifier,json=mainIdentifier,proto3" json:"main_identifier,omitempty"`
	TraitsId       string                                         `protobuf:"bytes,5,opt,name=traits_id,json=traitsId,proto3" json:"traits_id,omitempty"`
	AddressesIds   []string                                       `protobuf:"bytes,6,rep,name=addresses_ids,json=addressesIds,proto3" json:"addresses_ids,omitempty"`
	CredentialsIds map[string]string                              `protobuf:"bytes,7,rep,name=credentials_ids,json=credentialsIds,proto3" json:"credentials_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SchemaId       string                                         `protobuf:"bytes,8,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Lock           GetIdentitiesByAttributeResponse_Identity_Lock `protobuf:"varint,9,opt,name=lock,proto3,enum=depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse_Identity_Lock" json:"lock,omitempty"`
}

func (x *GetIdentitiesByAttributeResponse_Identity) Reset() {
	*x = GetIdentitiesByAttributeResponse_Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentitiesByAttributeResponse_Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentitiesByAttributeResponse_Identity) ProtoMessage() {}

func (x *GetIdentitiesByAttributeResponse_Identity) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentitiesByAttributeResponse_Identity.ProtoReflect.Descriptor instead.
func (*GetIdentitiesByAttributeResponse_Identity) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetMainIdentifier() string {
	if x != nil {
		return x.MainIdentifier
	}
	return ""
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetTraitsId() string {
	if x != nil {
		return x.TraitsId
	}
	return ""
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetAddressesIds() []string {
	if x != nil {
		return x.AddressesIds
	}
	return nil
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetCredentialsIds() map[string]string {
	if x != nil {
		return x.CredentialsIds
	}
	return nil
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

func (x *GetIdentitiesByAttributeResponse_Identity) GetLock() GetIdentitiesByAttributeResponse_Identity_Lock {
	if x != nil {
		return x.Lock
	}
	return GetIdentitiesByAttributeResponse_Identity_UNLOCKED
}

type GetCredentialsResponse_Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialId string               `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IdentityId   string               `protobuf:"bytes,4,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	Type         int32                `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Name         string               `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Configured   bool                 `protobuf:"varint,7,opt,name=configured,proto3" json:"configured,omitempty"`
}

func (x *GetCredentialsResponse_Credential) Reset() {
	*x = GetCredentialsResponse_Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialsResponse_Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialsResponse_Credential) ProtoMessage() {}

func (x *GetCredentialsResponse_Credential) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialsResponse_Credential.ProtoReflect.Descriptor instead.
func (*GetCredentialsResponse_Credential) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetCredentialsResponse_Credential) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

func (x *GetCredentialsResponse_Credential) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetCredentialsResponse_Credential) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetCredentialsResponse_Credential) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetCredentialsResponse_Credential) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetCredentialsResponse_Credential) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCredentialsResponse_Credential) GetConfigured() bool {
	if x != nil {
		return x.Configured
	}
	return false
}

type GetConnectionsResponse_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClientId         string                           `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret     string                           `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ButtonImageUrl   string                           `protobuf:"bytes,4,opt,name=button_image_url,json=buttonImageUrl,proto3" json:"button_image_url,omitempty"`
	Provider         GetConnectionsResponse_Providers `protobuf:"varint,6,opt,name=provider,proto3,enum=depot.devtools.auth.v0.identity.admin.GetConnectionsResponse_Providers" json:"provider,omitempty"`
	OidcDiscoveryUrl string                           `protobuf:"bytes,7,opt,name=oidc_discovery_url,json=oidcDiscoveryUrl,proto3" json:"oidc_discovery_url,omitempty"`
	Mfa              []string                         `protobuf:"bytes,8,rep,name=mfa,proto3" json:"mfa,omitempty"`
	Type             GetConnectionsResponse_Types     `protobuf:"varint,9,opt,name=type,proto3,enum=depot.devtools.auth.v0.identity.admin.GetConnectionsResponse_Types" json:"type,omitempty"`
	Id               string                           `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	Scopes           string                           `protobuf:"bytes,11,opt,name=scopes,proto3" json:"scopes,omitempty"`
	Purpose          GetConnectionsResponse_Purposes  `protobuf:"varint,12,opt,name=purpose,proto3,enum=depot.devtools.auth.v0.identity.admin.GetConnectionsResponse_Purposes" json:"purpose,omitempty"`
}

func (x *GetConnectionsResponse_Connection) Reset() {
	*x = GetConnectionsResponse_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionsResponse_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionsResponse_Connection) ProtoMessage() {}

func (x *GetConnectionsResponse_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionsResponse_Connection.ProtoReflect.Descriptor instead.
func (*GetConnectionsResponse_Connection) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{21, 0}
}

func (x *GetConnectionsResponse_Connection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetConnectionsResponse_Connection) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetConnectionsResponse_Connection) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *GetConnectionsResponse_Connection) GetButtonImageUrl() string {
	if x != nil {
		return x.ButtonImageUrl
	}
	return ""
}

func (x *GetConnectionsResponse_Connection) GetProvider() GetConnectionsResponse_Providers {
	if x != nil {
		return x.Provider
	}
	return GetConnectionsResponse_NONE
}

func (x *GetConnectionsResponse_Connection) GetOidcDiscoveryUrl() string {
	if x != nil {
		return x.OidcDiscoveryUrl
	}
	return ""
}

func (x *GetConnectionsResponse_Connection) GetMfa() []string {
	if x != nil {
		return x.Mfa
	}
	return nil
}

func (x *GetConnectionsResponse_Connection) GetType() GetConnectionsResponse_Types {
	if x != nil {
		return x.Type
	}
	return GetConnectionsResponse_UNSET
}

func (x *GetConnectionsResponse_Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetConnectionsResponse_Connection) GetScopes() string {
	if x != nil {
		return x.Scopes
	}
	return ""
}

func (x *GetConnectionsResponse_Connection) GetPurpose() GetConnectionsResponse_Purposes {
	if x != nil {
		return x.Purpose
	}
	return GetConnectionsResponse_PURPOSE_UNKNOWN
}

type GetOAuth2ClientsResponse_Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedCorsOrigins                []string                    `protobuf:"bytes,1,rep,name=allowed_cors_origins,json=allowedCorsOrigins,proto3" json:"allowed_cors_origins,omitempty"`
	Audience                          []string                    `protobuf:"bytes,2,rep,name=audience,proto3" json:"audience,omitempty"`
	BackchannelLogoutSessionRequired  bool                        `protobuf:"varint,3,opt,name=backchannel_logout_session_required,json=backchannelLogoutSessionRequired,proto3" json:"backchannel_logout_session_required,omitempty"`
	BackchannelLogoutUri              string                      `protobuf:"bytes,4,opt,name=backchannel_logout_uri,json=backchannelLogoutUri,proto3" json:"backchannel_logout_uri,omitempty"`
	ClientId                          string                      `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientName                        string                      `protobuf:"bytes,6,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	ClientSecretExpiresAt             int64                       `protobuf:"varint,7,opt,name=client_secret_expires_at,json=clientSecretExpiresAt,proto3" json:"client_secret_expires_at,omitempty"`
	ClientUri                         string                      `protobuf:"bytes,8,opt,name=client_uri,json=clientUri,proto3" json:"client_uri,omitempty"`
	Contacts                          []string                    `protobuf:"bytes,9,rep,name=contacts,proto3" json:"contacts,omitempty"`
	CreatedAt                         *timestamp.Timestamp        `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FrontchannelLogoutSessionRequired bool                        `protobuf:"varint,11,opt,name=frontchannel_logout_session_required,json=frontchannelLogoutSessionRequired,proto3" json:"frontchannel_logout_session_required,omitempty"`
	FrontchannelLogoutUri             string                      `protobuf:"bytes,12,opt,name=frontchannel_logout_uri,json=frontchannelLogoutUri,proto3" json:"frontchannel_logout_uri,omitempty"`
	GrantTypes                        []GrantType                 `protobuf:"varint,13,rep,packed,name=grant_types,json=grantTypes,proto3,enum=depot.devtools.auth.v0.identity.admin.GrantType" json:"grant_types,omitempty"`
	Jwks                              *_struct.Struct             `protobuf:"bytes,14,opt,name=jwks,proto3" json:"jwks,omitempty"`
	JwksUri                           string                      `protobuf:"bytes,15,opt,name=jwks_uri,json=jwksUri,proto3" json:"jwks_uri,omitempty"`
	LogoUri                           string                      `protobuf:"bytes,16,opt,name=logo_uri,json=logoUri,proto3" json:"logo_uri,omitempty"`
	Metadata                          *_struct.Struct             `protobuf:"bytes,17,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Owner                             string                      `protobuf:"bytes,18,opt,name=owner,proto3" json:"owner,omitempty"`
	PolicyUri                         string                      `protobuf:"bytes,19,opt,name=policy_uri,json=policyUri,proto3" json:"policy_uri,omitempty"`
	PostLogoutRedirectUris            []string                    `protobuf:"bytes,20,rep,name=post_logout_redirect_uris,json=postLogoutRedirectUris,proto3" json:"post_logout_redirect_uris,omitempty"`
	RedirectUris                      []string                    `protobuf:"bytes,21,rep,name=redirect_uris,json=redirectUris,proto3" json:"redirect_uris,omitempty"`
	RequestObjectSigningAlg           RequestObjectSigningAlg     `protobuf:"varint,22,opt,name=request_object_signing_alg,json=requestObjectSigningAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg" json:"request_object_signing_alg,omitempty"`
	RequestUris                       []string                    `protobuf:"bytes,23,rep,name=request_uris,json=requestUris,proto3" json:"request_uris,omitempty"`
	ResponseTypes                     []ResponseType              `protobuf:"varint,24,rep,packed,name=response_types,json=responseTypes,proto3,enum=depot.devtools.auth.v0.identity.admin.ResponseType" json:"response_types,omitempty"`
	Scope                             string                      `protobuf:"bytes,25,opt,name=scope,proto3" json:"scope,omitempty"`
	SectorIdentifierUri               string                      `protobuf:"bytes,26,opt,name=sector_identifier_uri,json=sectorIdentifierUri,proto3" json:"sector_identifier_uri,omitempty"`
	SubjectType                       SubjectType                 `protobuf:"varint,27,opt,name=subject_type,json=subjectType,proto3,enum=depot.devtools.auth.v0.identity.admin.SubjectType" json:"subject_type,omitempty"`
	TokenEndpointAuthMethod           TokenEndpointAuthMethod     `protobuf:"varint,28,opt,name=token_endpoint_auth_method,json=tokenEndpointAuthMethod,proto3,enum=depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod" json:"token_endpoint_auth_method,omitempty"`
	TokenEndpointAuthSigningAlg       TokenEndpointAuthSigningAlg `protobuf:"varint,29,opt,name=token_endpoint_auth_signing_alg,json=tokenEndpointAuthSigningAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg" json:"token_endpoint_auth_signing_alg,omitempty"`
	TosUri                            string                      `protobuf:"bytes,30,opt,name=tos_uri,json=tosUri,proto3" json:"tos_uri,omitempty"`
	UpdatedAt                         *timestamp.Timestamp        `protobuf:"bytes,31,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UserinfoSignedResponseAlg         UserinfoSignedResponseAlg   `protobuf:"varint,32,opt,name=userinfo_signed_response_alg,json=userinfoSignedResponseAlg,proto3,enum=depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg" json:"userinfo_signed_response_alg,omitempty"`
	ClientType                        ClientType                  `protobuf:"varint,33,opt,name=client_type,json=clientType,proto3,enum=depot.devtools.auth.v0.identity.admin.ClientType" json:"client_type,omitempty"`
}

func (x *GetOAuth2ClientsResponse_Client) Reset() {
	*x = GetOAuth2ClientsResponse_Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOAuth2ClientsResponse_Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOAuth2ClientsResponse_Client) ProtoMessage() {}

func (x *GetOAuth2ClientsResponse_Client) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOAuth2ClientsResponse_Client.ProtoReflect.Descriptor instead.
func (*GetOAuth2ClientsResponse_Client) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{27, 0}
}

func (x *GetOAuth2ClientsResponse_Client) GetAllowedCorsOrigins() []string {
	if x != nil {
		return x.AllowedCorsOrigins
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetBackchannelLogoutSessionRequired() bool {
	if x != nil {
		return x.BackchannelLogoutSessionRequired
	}
	return false
}

func (x *GetOAuth2ClientsResponse_Client) GetBackchannelLogoutUri() string {
	if x != nil {
		return x.BackchannelLogoutUri
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetClientSecretExpiresAt() int64 {
	if x != nil {
		return x.ClientSecretExpiresAt
	}
	return 0
}

func (x *GetOAuth2ClientsResponse_Client) GetClientUri() string {
	if x != nil {
		return x.ClientUri
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetContacts() []string {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetFrontchannelLogoutSessionRequired() bool {
	if x != nil {
		return x.FrontchannelLogoutSessionRequired
	}
	return false
}

func (x *GetOAuth2ClientsResponse_Client) GetFrontchannelLogoutUri() string {
	if x != nil {
		return x.FrontchannelLogoutUri
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetGrantTypes() []GrantType {
	if x != nil {
		return x.GrantTypes
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetJwks() *_struct.Struct {
	if x != nil {
		return x.Jwks
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetJwksUri() string {
	if x != nil {
		return x.JwksUri
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetLogoUri() string {
	if x != nil {
		return x.LogoUri
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetMetadata() *_struct.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetPolicyUri() string {
	if x != nil {
		return x.PolicyUri
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetPostLogoutRedirectUris() []string {
	if x != nil {
		return x.PostLogoutRedirectUris
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetRedirectUris() []string {
	if x != nil {
		return x.RedirectUris
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetRequestObjectSigningAlg() RequestObjectSigningAlg {
	if x != nil {
		return x.RequestObjectSigningAlg
	}
	return RequestObjectSigningAlg_REQUEST_OBJECT_SIGNING_ALG_UNSET
}

func (x *GetOAuth2ClientsResponse_Client) GetRequestUris() []string {
	if x != nil {
		return x.RequestUris
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetResponseTypes() []ResponseType {
	if x != nil {
		return x.ResponseTypes
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetSectorIdentifierUri() string {
	if x != nil {
		return x.SectorIdentifierUri
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetSubjectType() SubjectType {
	if x != nil {
		return x.SubjectType
	}
	return SubjectType_SUBJECT_TYPE_PUBLIC
}

func (x *GetOAuth2ClientsResponse_Client) GetTokenEndpointAuthMethod() TokenEndpointAuthMethod {
	if x != nil {
		return x.TokenEndpointAuthMethod
	}
	return TokenEndpointAuthMethod_TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC
}

func (x *GetOAuth2ClientsResponse_Client) GetTokenEndpointAuthSigningAlg() TokenEndpointAuthSigningAlg {
	if x != nil {
		return x.TokenEndpointAuthSigningAlg
	}
	return TokenEndpointAuthSigningAlg_TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET
}

func (x *GetOAuth2ClientsResponse_Client) GetTosUri() string {
	if x != nil {
		return x.TosUri
	}
	return ""
}

func (x *GetOAuth2ClientsResponse_Client) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetOAuth2ClientsResponse_Client) GetUserinfoSignedResponseAlg() UserinfoSignedResponseAlg {
	if x != nil {
		return x.UserinfoSignedResponseAlg
	}
	return UserinfoSignedResponseAlg_USERINFO_SIGNED_RESPONSE_ALG_UNSET
}

func (x *GetOAuth2ClientsResponse_Client) GetClientType() ClientType {
	if x != nil {
		return x.ClientType
	}
	return ClientType_CLIENT_TYPE_UNSET
}

type GetAddressesResponse_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IdentityId  string `protobuf:"bytes,2,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address     string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Verified    bool   `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
	IdSchemaKey string `protobuf:"bytes,6,opt,name=id_schema_key,json=idSchemaKey,proto3" json:"id_schema_key,omitempty"`
}

func (x *GetAddressesResponse_Address) Reset() {
	*x = GetAddressesResponse_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressesResponse_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressesResponse_Address) ProtoMessage() {}

func (x *GetAddressesResponse_Address) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressesResponse_Address.ProtoReflect.Descriptor instead.
func (*GetAddressesResponse_Address) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{35, 0}
}

func (x *GetAddressesResponse_Address) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAddressesResponse_Address) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetAddressesResponse_Address) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAddressesResponse_Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetAddressesResponse_Address) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *GetAddressesResponse_Address) GetIdSchemaKey() string {
	if x != nil {
		return x.IdSchemaKey
	}
	return ""
}

type GetIdentityLoginAttemptsResponse_Attempt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IdentityId            string               `protobuf:"bytes,2,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	Status                string               `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	AuthenticationMethods []string             `protobuf:"bytes,4,rep,name=authentication_methods,json=authenticationMethods,proto3" json:"authentication_methods,omitempty"`
	CreatedAt             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt             *timestamp.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *GetIdentityLoginAttemptsResponse_Attempt) Reset() {
	*x = GetIdentityLoginAttemptsResponse_Attempt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityLoginAttemptsResponse_Attempt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityLoginAttemptsResponse_Attempt) ProtoMessage() {}

func (x *GetIdentityLoginAttemptsResponse_Attempt) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityLoginAttemptsResponse_Attempt.ProtoReflect.Descriptor instead.
func (*GetIdentityLoginAttemptsResponse_Attempt) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{45, 0}
}

func (x *GetIdentityLoginAttemptsResponse_Attempt) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetIdentityLoginAttemptsResponse_Attempt) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetIdentityLoginAttemptsResponse_Attempt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetIdentityLoginAttemptsResponse_Attempt) GetAuthenticationMethods() []string {
	if x != nil {
		return x.AuthenticationMethods
	}
	return nil
}

func (x *GetIdentityLoginAttemptsResponse_Attempt) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetIdentityLoginAttemptsResponse_Attempt) GetExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type GetIdSchemasResponse_JsonSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content   *_struct.Struct      `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsDefault bool                 `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
}

func (x *GetIdSchemasResponse_JsonSchema) Reset() {
	*x = GetIdSchemasResponse_JsonSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdSchemasResponse_JsonSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdSchemasResponse_JsonSchema) ProtoMessage() {}

func (x *GetIdSchemasResponse_JsonSchema) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdSchemasResponse_JsonSchema.ProtoReflect.Descriptor instead.
func (*GetIdSchemasResponse_JsonSchema) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{49, 0}
}

func (x *GetIdSchemasResponse_JsonSchema) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetIdSchemasResponse_JsonSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIdSchemasResponse_JsonSchema) GetContent() *_struct.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetIdSchemasResponse_JsonSchema) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetIdSchemasResponse_JsonSchema) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetIdSchemasResponse_JsonSchema) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type GetEmailsSetupResponse_EmailTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *GetEmailsSetupResponse_EmailTemplate) Reset() {
	*x = GetEmailsSetupResponse_EmailTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailsSetupResponse_EmailTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailsSetupResponse_EmailTemplate) ProtoMessage() {}

func (x *GetEmailsSetupResponse_EmailTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailsSetupResponse_EmailTemplate.ProtoReflect.Descriptor instead.
func (*GetEmailsSetupResponse_EmailTemplate) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{61, 0}
}

func (x *GetEmailsSetupResponse_EmailTemplate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetEmailsSetupResponse_EmailTemplate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type GetEmailsSetupResponse_EmailSender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailAddress string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	SmtpHost     string `protobuf:"bytes,2,opt,name=smtp_host,json=smtpHost,proto3" json:"smtp_host,omitempty"`
	SmtpPort     uint32 `protobuf:"varint,3,opt,name=smtp_port,json=smtpPort,proto3" json:"smtp_port,omitempty"`
	SmtpUsername string `protobuf:"bytes,4,opt,name=smtp_username,json=smtpUsername,proto3" json:"smtp_username,omitempty"`
	SmtpPassword string `protobuf:"bytes,5,opt,name=smtp_password,json=smtpPassword,proto3" json:"smtp_password,omitempty"`
}

func (x *GetEmailsSetupResponse_EmailSender) Reset() {
	*x = GetEmailsSetupResponse_EmailSender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailsSetupResponse_EmailSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailsSetupResponse_EmailSender) ProtoMessage() {}

func (x *GetEmailsSetupResponse_EmailSender) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailsSetupResponse_EmailSender.ProtoReflect.Descriptor instead.
func (*GetEmailsSetupResponse_EmailSender) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{61, 1}
}

func (x *GetEmailsSetupResponse_EmailSender) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *GetEmailsSetupResponse_EmailSender) GetSmtpHost() string {
	if x != nil {
		return x.SmtpHost
	}
	return ""
}

func (x *GetEmailsSetupResponse_EmailSender) GetSmtpPort() uint32 {
	if x != nil {
		return x.SmtpPort
	}
	return 0
}

func (x *GetEmailsSetupResponse_EmailSender) GetSmtpUsername() string {
	if x != nil {
		return x.SmtpUsername
	}
	return ""
}

func (x *GetEmailsSetupResponse_EmailSender) GetSmtpPassword() string {
	if x != nil {
		return x.SmtpPassword
	}
	return ""
}

type UpdateEmailsSetupRequest_EmailTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *UpdateEmailsSetupRequest_EmailTemplate) Reset() {
	*x = UpdateEmailsSetupRequest_EmailTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailsSetupRequest_EmailTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailsSetupRequest_EmailTemplate) ProtoMessage() {}

func (x *UpdateEmailsSetupRequest_EmailTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailsSetupRequest_EmailTemplate.ProtoReflect.Descriptor instead.
func (*UpdateEmailsSetupRequest_EmailTemplate) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{62, 0}
}

func (x *UpdateEmailsSetupRequest_EmailTemplate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateEmailsSetupRequest_EmailTemplate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type UpdateEmailsSetupRequest_EmailSender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailAddress string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	SmtpHost     string `protobuf:"bytes,2,opt,name=smtp_host,json=smtpHost,proto3" json:"smtp_host,omitempty"`
	SmtpPort     uint32 `protobuf:"varint,3,opt,name=smtp_port,json=smtpPort,proto3" json:"smtp_port,omitempty"`
	SmtpUsername string `protobuf:"bytes,4,opt,name=smtp_username,json=smtpUsername,proto3" json:"smtp_username,omitempty"`
	SmtpPassword string `protobuf:"bytes,5,opt,name=smtp_password,json=smtpPassword,proto3" json:"smtp_password,omitempty"`
}

func (x *UpdateEmailsSetupRequest_EmailSender) Reset() {
	*x = UpdateEmailsSetupRequest_EmailSender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailsSetupRequest_EmailSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailsSetupRequest_EmailSender) ProtoMessage() {}

func (x *UpdateEmailsSetupRequest_EmailSender) ProtoReflect() protoreflect.Message {
	mi := &file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailsSetupRequest_EmailSender.ProtoReflect.Descriptor instead.
func (*UpdateEmailsSetupRequest_EmailSender) Descriptor() ([]byte, []int) {
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP(), []int{62, 1}
}

func (x *UpdateEmailsSetupRequest_EmailSender) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UpdateEmailsSetupRequest_EmailSender) GetSmtpHost() string {
	if x != nil {
		return x.SmtpHost
	}
	return ""
}

func (x *UpdateEmailsSetupRequest_EmailSender) GetSmtpPort() uint32 {
	if x != nil {
		return x.SmtpPort
	}
	return 0
}

func (x *UpdateEmailsSetupRequest_EmailSender) GetSmtpUsername() string {
	if x != nil {
		return x.SmtpUsername
	}
	return ""
}

func (x *UpdateEmailsSetupRequest_EmailSender) GetSmtpPassword() string {
	if x != nil {
		return x.SmtpPassword
	}
	return ""
}

var File_devtools_auth_v0_proto_identity_admin_admin_proto protoreflect.FileDescriptor

var file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDesc = []byte{
	0x0a, 0x31, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f,
	0x76, 0x30, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x25, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x49, 0x64, 0x22, 0x39, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xae, 0x04, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0xbe, 0x02, 0x0a, 0x08, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x41, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x26, 0x0a, 0x04, 0x4c, 0x6f,
	0x63, 0x6b, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x01, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xed, 0x04, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x49, 0x64, 0x73, 0x12, 0x77, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x04, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x41,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x26, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x4c,
	0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x22, 0x79, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9e, 0x06, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x8d, 0x05, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x49, 0x64, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x63,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64,
	0x12, 0x68, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x54,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x41, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a,
	0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x01, 0x22, 0x55, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa6, 0x06, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x70, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x1a, 0x8f, 0x05, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x49,
	0x64, 0x73, 0x12, 0x8d, 0x01, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x64, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49,
	0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12,
	0x69, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x55, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x41, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a,
	0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x01, 0x22, 0xb7, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x55, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63,
	0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x26, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x22,
	0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xa8, 0x04, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x70, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x1a, 0x90, 0x02, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x1a, 0x88, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x5e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8c, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x86, 0x09,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x64, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x12, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x69, 0x64,
	0x63, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x66, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x66, 0x61, 0x12,
	0x58, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x22, 0x93, 0x05, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x45,
	0x4e, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x41, 0x5a, 0x4f, 0x4e, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x49, 0x54, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x03,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x58, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x49,
	0x4c, 0x59, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45,
	0x45, 0x5a, 0x45, 0x52, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x47, 0x49, 0x54, 0x41,
	0x4c, 0x4f, 0x43, 0x45, 0x41, 0x4e, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x43,
	0x4f, 0x52, 0x44, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x52, 0x4f, 0x50, 0x42, 0x4f, 0x58,
	0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x56, 0x45, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x0b, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x49, 0x54, 0x42, 0x49, 0x54, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x47,
	0x49, 0x54, 0x45, 0x41, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42,
	0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x4c, 0x41, 0x42, 0x10, 0x0f, 0x12, 0x0a,
	0x0a, 0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48,
	0x4f, 0x50, 0x49, 0x46, 0x59, 0x10, 0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x4e, 0x44,
	0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x13, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x50, 0x4f, 0x54, 0x49,
	0x46, 0x59, 0x10, 0x14, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x15, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x50, 0x45, 0x10, 0x16, 0x12, 0x0a, 0x0a, 0x06, 0x54,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x17, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x42, 0x45, 0x52, 0x10,
	0x18, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x45, 0x50, 0x41, 0x59, 0x10, 0x19, 0x12, 0x09, 0x0a, 0x05,
	0x59, 0x41, 0x48, 0x4f, 0x4f, 0x10, 0x1a, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x41, 0x4d, 0x4d, 0x45,
	0x52, 0x10, 0x1b, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x52, 0x4f, 0x4b, 0x55, 0x10, 0x1c, 0x12,
	0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x1d, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x43, 0x4f, 0x4d, 0x10, 0x1e, 0x12, 0x09, 0x0a, 0x05,
	0x4b, 0x41, 0x4b, 0x41, 0x4f, 0x10, 0x1f, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x41, 0x53, 0x54, 0x46,
	0x4d, 0x10, 0x20, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x49, 0x4e, 0x10,
	0x21, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x22, 0x12, 0x0c, 0x0a, 0x08, 0x4f,
	0x4e, 0x45, 0x44, 0x52, 0x49, 0x56, 0x45, 0x10, 0x23, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x5a, 0x55,
	0x52, 0x45, 0x41, 0x44, 0x10, 0x24, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53,
	0x4f, 0x46, 0x54, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x25, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x54, 0x54, 0x4c, 0x45, 0x4e, 0x45, 0x54, 0x10, 0x26, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41,
	0x59, 0x50, 0x41, 0x4c, 0x10, 0x27, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45,
	0x52, 0x10, 0x28, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x41, 0x4c, 0x45, 0x53, 0x46, 0x4f, 0x52, 0x43,
	0x45, 0x10, 0x29, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x54, 0x41, 0x4c, 0x4b, 0x10,
	0x2a, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x2b, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x45, 0x45, 0x54, 0x55, 0x50, 0x10, 0x2c, 0x12, 0x08, 0x0a, 0x04, 0x58, 0x45, 0x52, 0x4f,
	0x10, 0x2e, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x4b, 0x10, 0x2f, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x41,
	0x56, 0x45, 0x52, 0x10, 0x30, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x41, 0x4e, 0x44, 0x45, 0x58, 0x10,
	0x31, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x45, 0x58, 0x54, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x32,
	0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x34, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x41, 0x56, 0x41, 0x10, 0x35, 0x22, 0x3d, 0x0a, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x54, 0x50,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4f, 0x54, 0x50, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x4f, 0x49, 0x44, 0x43, 0x10, 0x04, 0x22, 0x2e, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xc5, 0x0b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x48, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x94, 0x04, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x63, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x69,
	0x64, 0x63, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x69, 0x64, 0x63, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x66, 0x61, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x66, 0x61, 0x12, 0x57, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74,
	0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x07, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x73, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x93, 0x05,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x45, 0x4e, 0x49, 0x44, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x41, 0x5a, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x49, 0x54, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x4f, 0x58, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x4d, 0x4f,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x45, 0x5a, 0x45, 0x52,
	0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x47, 0x49, 0x54, 0x41, 0x4c, 0x4f, 0x43, 0x45,
	0x41, 0x4e, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x52, 0x44, 0x10,
	0x08, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x52, 0x4f, 0x50, 0x42, 0x4f, 0x58, 0x10, 0x09, 0x12, 0x0d,
	0x0a, 0x09, 0x45, 0x56, 0x45, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x0a, 0x12, 0x0c, 0x0a,
	0x08, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x49, 0x54, 0x42, 0x49, 0x54, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x49, 0x54, 0x45, 0x41,
	0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x0e, 0x12, 0x0a,
	0x0a, 0x06, 0x47, 0x49, 0x54, 0x4c, 0x41, 0x42, 0x10, 0x0f, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f,
	0x4f, 0x47, 0x4c, 0x45, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x4f, 0x50, 0x49, 0x46,
	0x59, 0x10, 0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x4e, 0x44, 0x43, 0x4c, 0x4f, 0x55,
	0x44, 0x10, 0x13, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x50, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x14,
	0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x15, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x50, 0x45, 0x10, 0x16, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x10, 0x17, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x42, 0x45, 0x52, 0x10, 0x18, 0x12, 0x09, 0x0a,
	0x05, 0x57, 0x45, 0x50, 0x41, 0x59, 0x10, 0x19, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x41, 0x48, 0x4f,
	0x4f, 0x10, 0x1a, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x41, 0x4d, 0x4d, 0x45, 0x52, 0x10, 0x1b, 0x12,
	0x0a, 0x0a, 0x06, 0x48, 0x45, 0x52, 0x4f, 0x4b, 0x55, 0x10, 0x1c, 0x12, 0x0d, 0x0a, 0x09, 0x49,
	0x4e, 0x53, 0x54, 0x41, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x1d, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x43, 0x4f, 0x4d, 0x10, 0x1e, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x41, 0x4b, 0x41,
	0x4f, 0x10, 0x1f, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x41, 0x53, 0x54, 0x46, 0x4d, 0x10, 0x20, 0x12,
	0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x49, 0x4e, 0x10, 0x21, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x22, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x45, 0x44, 0x52,
	0x49, 0x56, 0x45, 0x10, 0x23, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x41, 0x44,
	0x10, 0x24, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x4f, 0x46, 0x54, 0x4f,
	0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x25, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x4e, 0x45, 0x54, 0x10, 0x26, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x59, 0x50, 0x41, 0x4c,
	0x10, 0x27, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x28, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x41, 0x4c, 0x45, 0x53, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x29, 0x12,
	0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x54, 0x41, 0x4c, 0x4b, 0x10, 0x2a, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x2b, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x45, 0x54,
	0x55, 0x50, 0x10, 0x2c, 0x12, 0x08, 0x0a, 0x04, 0x58, 0x45, 0x52, 0x4f, 0x10, 0x2e, 0x12, 0x06,
	0x0a, 0x02, 0x56, 0x4b, 0x10, 0x2f, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x41, 0x56, 0x45, 0x52, 0x10,
	0x30, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x41, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x31, 0x12, 0x0d, 0x0a,
	0x09, 0x4e, 0x45, 0x58, 0x54, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x32, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x34, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x41, 0x56,
	0x41, 0x10, 0x35, 0x22, 0x3d, 0x0a, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x09, 0x0a, 0x05,
	0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57,
	0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x54, 0x50, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x4f, 0x54, 0x50, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x49, 0x44, 0x43,
	0x10, 0x04, 0x22, 0x53, 0x0a, 0x08, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x4d,
	0x41, 0x49, 0x4e, 0x5f, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x5f, 0x46,
	0x41, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x96, 0x09, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x64, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x69, 0x64,
	0x63, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x69, 0x64, 0x63, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x66, 0x61, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x66, 0x61, 0x12, 0x58, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x93, 0x05, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x45, 0x4e, 0x49, 0x44, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x41, 0x5a, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x49, 0x54, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f,
	0x58, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x4d, 0x4f, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x45, 0x5a, 0x45, 0x52, 0x10, 0x06,
	0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x47, 0x49, 0x54, 0x41, 0x4c, 0x4f, 0x43, 0x45, 0x41, 0x4e,
	0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x08, 0x12,
	0x0b, 0x0a, 0x07, 0x44, 0x52, 0x4f, 0x50, 0x42, 0x4f, 0x58, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x56, 0x45, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x46,
	0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x54,
	0x42, 0x49, 0x54, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x49, 0x54, 0x45, 0x41, 0x10, 0x0d,
	0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06,
	0x47, 0x49, 0x54, 0x4c, 0x41, 0x42, 0x10, 0x0f, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f, 0x4f, 0x47,
	0x4c, 0x45, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x4f, 0x50, 0x49, 0x46, 0x59, 0x10,
	0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x4e, 0x44, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10,
	0x13, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x50, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x14, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x15, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52,
	0x49, 0x50, 0x45, 0x10, 0x16, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10,
	0x17, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x42, 0x45, 0x52, 0x10, 0x18, 0x12, 0x09, 0x0a, 0x05, 0x57,
	0x45, 0x50, 0x41, 0x59, 0x10, 0x19, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x41, 0x48, 0x4f, 0x4f, 0x10,
	0x1a, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x41, 0x4d, 0x4d, 0x45, 0x52, 0x10, 0x1b, 0x12, 0x0a, 0x0a,
	0x06, 0x48, 0x45, 0x52, 0x4f, 0x4b, 0x55, 0x10, 0x1c, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x1d, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x43, 0x4f, 0x4d, 0x10, 0x1e, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x41, 0x4b, 0x41, 0x4f, 0x10,
	0x1f, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x41, 0x53, 0x54, 0x46, 0x4d, 0x10, 0x20, 0x12, 0x0c, 0x0a,
	0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x49, 0x4e, 0x10, 0x21, 0x12, 0x08, 0x0a, 0x04, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x22, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x45, 0x44, 0x52, 0x49, 0x56,
	0x45, 0x10, 0x23, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x41, 0x44, 0x10, 0x24,
	0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x4f, 0x46, 0x54, 0x4f, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x25, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x4e,
	0x45, 0x54, 0x10, 0x26, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x59, 0x50, 0x41, 0x4c, 0x10, 0x27,
	0x12, 0x0b, 0x0a, 0x07, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x28, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x41, 0x4c, 0x45, 0x53, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x29, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x59, 0x50, 0x45, 0x54, 0x41, 0x4c, 0x4b, 0x10, 0x2a, 0x12, 0x09, 0x0a, 0x05, 0x53,
	0x4c, 0x41, 0x43, 0x4b, 0x10, 0x2b, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x45, 0x54, 0x55, 0x50,
	0x10, 0x2c, 0x12, 0x08, 0x0a, 0x04, 0x58, 0x45, 0x52, 0x4f, 0x10, 0x2e, 0x12, 0x06, 0x0a, 0x02,
	0x56, 0x4b, 0x10, 0x2f, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x41, 0x56, 0x45, 0x52, 0x10, 0x30, 0x12,
	0x0a, 0x0a, 0x06, 0x59, 0x41, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x31, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x45, 0x58, 0x54, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x32, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50,
	0x50, 0x4c, 0x45, 0x10, 0x34, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x41, 0x56, 0x41, 0x10,
	0x35, 0x22, 0x3d, 0x0a, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e,
	0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52,
	0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x54, 0x50, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x54, 0x4f, 0x54, 0x50, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x49, 0x44, 0x43, 0x10, 0x04,
	0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa1,
	0x10, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x07, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xa2, 0x0f,
	0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x73, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x43,
	0x6f, 0x72, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x23, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x72,
	0x69, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4f, 0x0a, 0x24, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x72,
	0x69, 0x12, 0x51, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64,
	0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x6a, 0x77, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6a, 0x77, 0x6b,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x77, 0x6b, 0x73, 0x55, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x69, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72,
	0x69, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x14,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x15, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69,
	0x73, 0x12, 0x7b, 0x0a, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x41, 0x6c, 0x67, 0x52, 0x17, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x17,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69,
	0x73, 0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x55, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7b,
	0x0a, 0x1a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x17, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x88, 0x01, 0x0a, 0x1f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x52, 0x1b, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x73, 0x55, 0x72, 0x69, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x1c, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x40, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x41, 0x6c, 0x67, 0x52, 0x19, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x67, 0x12, 0x52,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x8e, 0x0e, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75,
	0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x73,
	0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4d,
	0x0a, 0x23, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x62, 0x61, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x34, 0x0a,
	0x16, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62,
	0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x55, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x55, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x4f, 0x0a, 0x24, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x36, 0x0a, 0x17, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x69, 0x12, 0x51, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x30, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x6a,
	0x77, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x04, 0x6a, 0x77, 0x6b, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x77, 0x6b, 0x73,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x77, 0x6b, 0x73,
	0x55, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x69, 0x12, 0x33,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x69, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x70, 0x6f, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55,
	0x72, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x75, 0x72, 0x69, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x7b, 0x0a, 0x1a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x52, 0x17, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x41, 0x6c, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x33, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x55,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x1a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x17, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x88, 0x01, 0x0a, 0x1f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67,
	0x52, 0x1b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x6f, 0x73, 0x55, 0x72, 0x69, 0x12, 0x81, 0x01, 0x0a, 0x1c, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x67, 0x52,
	0x19, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x52, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75,
	0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0xd7, 0x0d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72,
	0x73, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x73, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x4d, 0x0a, 0x23, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x62, 0x61,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x55, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x4f, 0x0a, 0x24, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x69, 0x12, 0x51, 0x0a, 0x0b, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x04,
	0x6a, 0x77, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x04, 0x6a, 0x77, 0x6b, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x77, 0x6b,
	0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x77, 0x6b,
	0x73, 0x55, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x69, 0x12,
	0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x69, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x70, 0x6f,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x7b, 0x0a, 0x1a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x52, 0x17, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x33, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12,
	0x55, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x1a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x17, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x88, 0x01, 0x0a, 0x1f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c,
	0x67, 0x52, 0x1b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x73, 0x55, 0x72, 0x69, 0x12, 0x81, 0x01, 0x0a, 0x1c, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x67, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x67,
	0x52, 0x19, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x38, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xa4, 0x02,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4b, 0x65, 0x79, 0x22, 0x54, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0c, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x07, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0xb3, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4b, 0x65, 0x79,
	0x22, 0x6d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22,
	0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x2b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x42, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x91, 0x03, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x08, 0x61,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x08,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x1a, 0xff, 0x01, 0x0a, 0x07, 0x41, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a,
	0x16, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfb, 0x02, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x1a, 0xf8,
	0x01, 0x0a, 0x0a, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x81, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x88, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x6e, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcc,
	0x07, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x07, 0x77, 0x65, 0x6c,
	0x63, 0x6f, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x07, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65,
	0x12, 0x7e, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x13, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x76, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x78, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x12, 0x5d, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4b, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x03, 0x6f, 0x74,
	0x70, 0x12, 0x5d, 0x0a, 0x04, 0x73, 0x6d, 0x74, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x49, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x04, 0x73, 0x6d, 0x74, 0x70,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a,
	0x43, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x1a, 0xb6, 0x01, 0x0a, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6d, 0x74,
	0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6d,
	0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6d, 0x74, 0x70, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6d, 0x74, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6d, 0x74, 0x70,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x6d, 0x74, 0x70, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xbc, 0x07,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x07, 0x77, 0x65,
	0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x07, 0x77, 0x65, 0x6c, 0x63,
	0x6f, 0x6d, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x78, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x7a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x03,
	0x6f, 0x74, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x5f, 0x0a,
	0x04, 0x73, 0x6d, 0x74, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x04, 0x73, 0x6d, 0x74, 0x70, 0x1a, 0x43,
	0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x1a, 0xb6, 0x01, 0x0a, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6d, 0x74, 0x70,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6d, 0x74,
	0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6d, 0x74, 0x70, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6d, 0x74, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6d, 0x74, 0x70, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x6d, 0x74, 0x70, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x1b, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61,
	0x79, 0x73, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x64, 0x61, 0x79, 0x73, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x6c,
	0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x22, 0xa1, 0x04, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x79, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x55, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72,
	0x44, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x50,
	0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x82, 0x01, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x58, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x65, 0x72, 0x44, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x66, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x64, 0x1a, 0x3e, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x6c, 0x0a, 0x0a, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54,
	0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4c, 0x49, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x48, 0x49, 0x52, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x03, 0x2a, 0x41, 0x0a, 0x0b, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x55, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x55, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x57, 0x49, 0x53, 0x45, 0x10, 0x01, 0x2a, 0xd5, 0x01, 0x0a,
	0x17, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x32, 0x0a, 0x2e, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45,
	0x43, 0x52, 0x45, 0x54, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x00, 0x12, 0x31, 0x0a, 0x2d,
	0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12,
	0x2e, 0x0a, 0x2a, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x50, 0x52,
	0x49, 0x56, 0x41, 0x54, 0x45, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x4a, 0x57, 0x54, 0x10, 0x02, 0x12,
	0x23, 0x0a, 0x1f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x03, 0x2a, 0xcb, 0x03, 0x0a, 0x1b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x41, 0x6c, 0x67, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e,
	0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12,
	0x29, 0x0a, 0x25, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41,
	0x4c, 0x47, 0x5f, 0x52, 0x53, 0x32, 0x35, 0x36, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x52, 0x53,
	0x33, 0x38, 0x34, 0x10, 0x02, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45,
	0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x52, 0x53, 0x35, 0x31, 0x32, 0x10, 0x03,
	0x12, 0x29, 0x0a, 0x25, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49,
	0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f,
	0x41, 0x4c, 0x47, 0x5f, 0x50, 0x53, 0x32, 0x35, 0x36, 0x10, 0x04, 0x12, 0x29, 0x0a, 0x25, 0x54,
	0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x50,
	0x53, 0x33, 0x38, 0x34, 0x10, 0x05, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f,
	0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x50, 0x53, 0x35, 0x31, 0x32, 0x10,
	0x06, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f,
	0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47,
	0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x45, 0x53, 0x32, 0x35, 0x36, 0x10, 0x07, 0x12, 0x29, 0x0a, 0x25,
	0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f,
	0x45, 0x53, 0x33, 0x38, 0x34, 0x10, 0x08, 0x12, 0x29, 0x0a, 0x25, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x45, 0x53, 0x35, 0x31, 0x32,
	0x10, 0x09, 0x2a, 0xba, 0x01, 0x0a, 0x09, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44,
	0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x47, 0x52, 0x41,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x49,
	0x43, 0x49, 0x54, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x05, 0x2a,
	0x94, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x04, 0x12, 0x20,
	0x0a, 0x1c, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x05,
	0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10,
	0x06, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x07, 0x12,
	0x25, 0x0a, 0x21, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54,
	0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x08, 0x2a, 0x8a, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41,
	0x6c, 0x67, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47,
	0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49,
	0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x24, 0x0a,
	0x20, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x52, 0x53, 0x32, 0x35,
	0x36, 0x10, 0x02, 0x2a, 0x92, 0x01, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c,
	0x67, 0x12, 0x26, 0x0a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x41, 0x4c,
	0x47, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x55, 0x53, 0x45,
	0x52, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x41, 0x4c, 0x47, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01,
	0x12, 0x26, 0x0a, 0x22, 0x55, 0x53, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x41, 0x4c, 0x47,
	0x5f, 0x52, 0x53, 0x32, 0x35, 0x36, 0x10, 0x02, 0x32, 0xa3, 0x26, 0x0a, 0x05, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x39, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x45, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0xab, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x12, 0x46, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42,
	0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x3b, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8d, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8d, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x87, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x3a, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74,
	0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x39, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x3b, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x37, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x38, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x3a, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65,
	0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x3e, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xab, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x46, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x47, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93,
	0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3c, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x3a, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x39, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3a, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x40, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3c, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74,
	0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x6b,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x41, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x42, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x41, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3e, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x40, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x41, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x2e, 0x64, 0x65,
	0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x12, 0x3c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x96, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x3f, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64,
	0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x43, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x30, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74,
	0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x30, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xa2,
	0x01, 0x0a, 0x18, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x33, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x0a, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x33, 0x2d, 0x64, 0x65, 0x76, 0x2f,
	0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x3b, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x04, 0x41, 0x33, 0x49, 0x41, 0xaa, 0x02, 0x14, 0x41,
	0x75, 0x74, 0x68, 0x33, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0xca, 0x02, 0x14, 0x41, 0x75, 0x74, 0x68, 0x33, 0x5c, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xea, 0x02, 0x16, 0x41, 0x75, 0x74,
	0x68, 0x33, 0x3a, 0x3a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescOnce sync.Once
	file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescData = file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDesc
)

func file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescGZIP() []byte {
	file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescOnce.Do(func() {
		file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescData)
	})
	return file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDescData
}

var file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 20)
var file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 85)
var file_devtools_auth_v0_proto_identity_admin_admin_proto_goTypes = []interface{}{
	(ClientType)(0),                                     // 0: depot.devtools.auth.v0.identity.admin.ClientType
	(SubjectType)(0),                                    // 1: depot.devtools.auth.v0.identity.admin.SubjectType
	(TokenEndpointAuthMethod)(0),                        // 2: depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod
	(TokenEndpointAuthSigningAlg)(0),                    // 3: depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg
	(GrantType)(0),                                      // 4: depot.devtools.auth.v0.identity.admin.GrantType
	(ResponseType)(0),                                   // 5: depot.devtools.auth.v0.identity.admin.ResponseType
	(RequestObjectSigningAlg)(0),                        // 6: depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg
	(UserinfoSignedResponseAlg)(0),                      // 7: depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg
	(GetIdentitiesResponse_Lock)(0),                     // 8: depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Lock
	(GetIdentityResponse_Lock)(0),                       // 9: depot.devtools.auth.v0.identity.admin.GetIdentityResponse.Lock
	(GetIdentityByIdentifierResponse_Identity_Lock)(0),  // 10: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.Lock
	(GetIdentitiesByAttributeResponse_Identity_Lock)(0), // 11: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.Lock
	(UpdateIdentityRequest_Lock)(0),                     // 12: depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest.Lock
	(CreateConnectionRequest_Providers)(0),              // 13: depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Providers
	(CreateConnectionRequest_Types)(0),                  // 14: depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Types
	(GetConnectionsResponse_Providers)(0),               // 15: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Providers
	(GetConnectionsResponse_Types)(0),                   // 16: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Types
	(GetConnectionsResponse_Purposes)(0),                // 17: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Purposes
	(UpdateConnectionRequest_Providers)(0),              // 18: depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Providers
	(UpdateConnectionRequest_Types)(0),                  // 19: depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Types
	(*CreateIdentityRequest)(nil),                       // 20: depot.devtools.auth.v0.identity.admin.CreateIdentityRequest
	(*CreateIdentityResponse)(nil),                      // 21: depot.devtools.auth.v0.identity.admin.CreateIdentityResponse
	(*GetIdentitiesRequest)(nil),                        // 22: depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest
	(*GetIdentitiesResponse)(nil),                       // 23: depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse
	(*GetIdentityRequest)(nil),                          // 24: depot.devtools.auth.v0.identity.admin.GetIdentityRequest
	(*GetIdentityResponse)(nil),                         // 25: depot.devtools.auth.v0.identity.admin.GetIdentityResponse
	(*GetIdentityByIdentifierRequest)(nil),              // 26: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest
	(*GetIdentityByIdentifierResponse)(nil),             // 27: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse
	(*GetIdentitiesByAttributeRequest)(nil),             // 28: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest
	(*GetIdentitiesByAttributeResponse)(nil),            // 29: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse
	(*UpdateIdentityRequest)(nil),                       // 30: depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest
	(*UpdateIdentityResponse)(nil),                      // 31: depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse
	(*DeleteIdentityRequest)(nil),                       // 32: depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest
	(*DeleteIdentityResponse)(nil),                      // 33: depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse
	(*GetCredentialsRequest)(nil),                       // 34: depot.devtools.auth.v0.identity.admin.GetCredentialsRequest
	(*GetCredentialsResponse)(nil),                      // 35: depot.devtools.auth.v0.identity.admin.GetCredentialsResponse
	(*UpdateCredentialRequest)(nil),                     // 36: depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest
	(*UpdateCredentialResponse)(nil),                    // 37: depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse
	(*CreateConnectionRequest)(nil),                     // 38: depot.devtools.auth.v0.identity.admin.CreateConnectionRequest
	(*CreateConnectionResponse)(nil),                    // 39: depot.devtools.auth.v0.identity.admin.CreateConnectionResponse
	(*GetConnectionsRequest)(nil),                       // 40: depot.devtools.auth.v0.identity.admin.GetConnectionsRequest
	(*GetConnectionsResponse)(nil),                      // 41: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse
	(*UpdateConnectionRequest)(nil),                     // 42: depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest
	(*UpdateConnectionResponse)(nil),                    // 43: depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse
	(*DeleteConnectionRequest)(nil),                     // 44: depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest
	(*DeleteConnectionResponse)(nil),                    // 45: depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse
	(*GetOAuth2ClientsRequest)(nil),                     // 46: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest
	(*GetOAuth2ClientsResponse)(nil),                    // 47: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse
	(*CreateOAuth2ClientRequest)(nil),                   // 48: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest
	(*CreateOAuth2ClientResponse)(nil),                  // 49: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse
	(*UpdateOAuth2ClientRequest)(nil),                   // 50: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest
	(*UpdateOAuth2ClientResponse)(nil),                  // 51: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse
	(*DeleteOAuth2ClientRequest)(nil),                   // 52: depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest
	(*DeleteOAuth2ClientResponse)(nil),                  // 53: depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse
	(*GetAddressesRequest)(nil),                         // 54: depot.devtools.auth.v0.identity.admin.GetAddressesRequest
	(*GetAddressesResponse)(nil),                        // 55: depot.devtools.auth.v0.identity.admin.GetAddressesResponse
	(*GetAddressRequest)(nil),                           // 56: depot.devtools.auth.v0.identity.admin.GetAddressRequest
	(*GetAddressResponse)(nil),                          // 57: depot.devtools.auth.v0.identity.admin.GetAddressResponse
	(*UpdateAddressRequest)(nil),                        // 58: depot.devtools.auth.v0.identity.admin.UpdateAddressRequest
	(*UpdateAddressResponse)(nil),                       // 59: depot.devtools.auth.v0.identity.admin.UpdateAddressResponse
	(*GetTraitsRequest)(nil),                            // 60: depot.devtools.auth.v0.identity.admin.GetTraitsRequest
	(*GetTraitsResponse)(nil),                           // 61: depot.devtools.auth.v0.identity.admin.GetTraitsResponse
	(*UpdateTraitsRequest)(nil),                         // 62: depot.devtools.auth.v0.identity.admin.UpdateTraitsRequest
	(*UpdateTraitsResponse)(nil),                        // 63: depot.devtools.auth.v0.identity.admin.UpdateTraitsResponse
	(*GetIdentityLoginAttemptsRequest)(nil),             // 64: depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest
	(*GetIdentityLoginAttemptsResponse)(nil),            // 65: depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse
	(*CreateIdSchemaRequest)(nil),                       // 66: depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest
	(*CreateIdSchemaResponse)(nil),                      // 67: depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse
	(*GetIdSchemasRequest)(nil),                         // 68: depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest
	(*GetIdSchemasResponse)(nil),                        // 69: depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse
	(*GetIdSchemaRequest)(nil),                          // 70: depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest
	(*GetIdSchemaResponse)(nil),                         // 71: depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse
	(*GetDefaultIdSchemaRequest)(nil),                   // 72: depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest
	(*GetDefaultIdSchemaResponse)(nil),                  // 73: depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse
	(*UpdateIdSchemaRequest)(nil),                       // 74: depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest
	(*UpdateIdSchemaResponse)(nil),                      // 75: depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse
	(*MarkDefaultIdSchemaRequest)(nil),                  // 76: depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest
	(*MarkDefaultIdSchemaResponse)(nil),                 // 77: depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse
	(*DeleteIdSchemaRequest)(nil),                       // 78: depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest
	(*DeleteIdSchemaResponse)(nil),                      // 79: depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse
	(*GetEmailsSetupRequest)(nil),                       // 80: depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest
	(*GetEmailsSetupResponse)(nil),                      // 81: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse
	(*UpdateEmailsSetupRequest)(nil),                    // 82: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest
	(*UpdateEmailsSetupResponse)(nil),                   // 83: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse
	(*GetUserBaseStatisticsRequest)(nil),                // 84: depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest
	(*GetUserBaseStatisticsResponse)(nil),               // 85: depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse
	(*GetIdentitiesResponse_Identity)(nil),              // 86: depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity
	nil,                                                 // 87: depot.devtools.auth.v0.identity.admin.GetIdentityResponse.CredentialsIdsEntry
	(*GetIdentityByIdentifierResponse_Identity)(nil),    // 88: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity
	nil, // 89: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry
	(*GetIdentitiesByAttributeResponse_Identity)(nil), // 90: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity
	nil, // 91: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.CredentialsIdsEntry
	(*GetCredentialsResponse_Credential)(nil), // 92: depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential
	nil, // 93: depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.CredentialsEntry
	(*GetConnectionsResponse_Connection)(nil),        // 94: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection
	(*GetOAuth2ClientsResponse_Client)(nil),          // 95: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client
	(*GetAddressesResponse_Address)(nil),             // 96: depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address
	(*GetIdentityLoginAttemptsResponse_Attempt)(nil), // 97: depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt
	(*GetIdSchemasResponse_JsonSchema)(nil),          // 98: depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema
	(*GetEmailsSetupResponse_EmailTemplate)(nil),     // 99: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate
	(*GetEmailsSetupResponse_EmailSender)(nil),       // 100: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender
	(*UpdateEmailsSetupRequest_EmailTemplate)(nil),   // 101: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate
	(*UpdateEmailsSetupRequest_EmailSender)(nil),     // 102: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender
	nil,                         // 103: depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse.UsersPerDayEntry
	nil,                         // 104: depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse.SessionsPerDayEntry
	(*_struct.Struct)(nil),      // 105: google.protobuf.Struct
	(*timestamp.Timestamp)(nil), // 106: google.protobuf.Timestamp
}
var file_devtools_auth_v0_proto_identity_admin_admin_proto_depIdxs = []int32{
	105, // 0: depot.devtools.auth.v0.identity.admin.CreateIdentityRequest.data:type_name -> google.protobuf.Struct
	86,  // 1: depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.identities:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity
	106, // 2: depot.devtools.auth.v0.identity.admin.GetIdentityResponse.created_at:type_name -> google.protobuf.Timestamp
	106, // 3: depot.devtools.auth.v0.identity.admin.GetIdentityResponse.updated_at:type_name -> google.protobuf.Timestamp
	87,  // 4: depot.devtools.auth.v0.identity.admin.GetIdentityResponse.credentials_ids:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentityResponse.CredentialsIdsEntry
	9,   // 5: depot.devtools.auth.v0.identity.admin.GetIdentityResponse.lock:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentityResponse.Lock
	88,  // 6: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.identity:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity
	90,  // 7: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.identities:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity
	12,  // 8: depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest.lock:type_name -> depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest.Lock
	93,  // 9: depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.credentials:type_name -> depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.CredentialsEntry
	105, // 10: depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest.data:type_name -> google.protobuf.Struct
	13,  // 11: depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.provider:type_name -> depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Providers
	14,  // 12: depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.type:type_name -> depot.devtools.auth.v0.identity.admin.CreateConnectionRequest.Types
	94,  // 13: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.connections:type_name -> depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection
	18,  // 14: depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.provider:type_name -> depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Providers
	19,  // 15: depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.type:type_name -> depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest.Types
	95,  // 16: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.clients:type_name -> depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client
	4,   // 17: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.grant_types:type_name -> depot.devtools.auth.v0.identity.admin.GrantType
	105, // 18: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.jwks:type_name -> google.protobuf.Struct
	105, // 19: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.metadata:type_name -> google.protobuf.Struct
	6,   // 20: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.request_object_signing_alg:type_name -> depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg
	5,   // 21: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.response_types:type_name -> depot.devtools.auth.v0.identity.admin.ResponseType
	1,   // 22: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.subject_type:type_name -> depot.devtools.auth.v0.identity.admin.SubjectType
	2,   // 23: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.token_endpoint_auth_method:type_name -> depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod
	3,   // 24: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.token_endpoint_auth_signing_alg:type_name -> depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg
	7,   // 25: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.userinfo_signed_response_alg:type_name -> depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg
	0,   // 26: depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest.client_type:type_name -> depot.devtools.auth.v0.identity.admin.ClientType
	4,   // 27: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.grant_types:type_name -> depot.devtools.auth.v0.identity.admin.GrantType
	105, // 28: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.jwks:type_name -> google.protobuf.Struct
	105, // 29: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.metadata:type_name -> google.protobuf.Struct
	6,   // 30: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.request_object_signing_alg:type_name -> depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg
	5,   // 31: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.response_types:type_name -> depot.devtools.auth.v0.identity.admin.ResponseType
	1,   // 32: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.subject_type:type_name -> depot.devtools.auth.v0.identity.admin.SubjectType
	2,   // 33: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.token_endpoint_auth_method:type_name -> depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod
	3,   // 34: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.token_endpoint_auth_signing_alg:type_name -> depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg
	7,   // 35: depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest.userinfo_signed_response_alg:type_name -> depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg
	96,  // 36: depot.devtools.auth.v0.identity.admin.GetAddressesResponse.addresses:type_name -> depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address
	97,  // 37: depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.attempts:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt
	105, // 38: depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest.content:type_name -> google.protobuf.Struct
	98,  // 39: depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.jsonschemas:type_name -> depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema
	105, // 40: depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse.content:type_name -> google.protobuf.Struct
	106, // 41: depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse.created_at:type_name -> google.protobuf.Timestamp
	106, // 42: depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse.updated_at:type_name -> google.protobuf.Timestamp
	105, // 43: depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse.content:type_name -> google.protobuf.Struct
	106, // 44: depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse.created_at:type_name -> google.protobuf.Timestamp
	106, // 45: depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse.updated_at:type_name -> google.protobuf.Timestamp
	105, // 46: depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest.content:type_name -> google.protobuf.Struct
	99,  // 47: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.welcome:type_name -> depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate
	99,  // 48: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.account_verification:type_name -> depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate
	99,  // 49: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.account_recovery:type_name -> depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate
	99,  // 50: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.account_recovered:type_name -> depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate
	99,  // 51: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.otp:type_name -> depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailTemplate
	100, // 52: depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.smtp:type_name -> depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse.EmailSender
	101, // 53: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.welcome:type_name -> depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate
	101, // 54: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.account_verification:type_name -> depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate
	101, // 55: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.account_recovery:type_name -> depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate
	101, // 56: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.account_recovered:type_name -> depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate
	101, // 57: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.otp:type_name -> depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailTemplate
	102, // 58: depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.smtp:type_name -> depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest.EmailSender
	106, // 59: depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest.lifetime_start_at:type_name -> google.protobuf.Timestamp
	106, // 60: depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest.lifetime_end_at:type_name -> google.protobuf.Timestamp
	103, // 61: depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse.users_per_day:type_name -> depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse.UsersPerDayEntry
	104, // 62: depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse.sessions_per_day:type_name -> depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse.SessionsPerDayEntry
	106, // 63: depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.created_at:type_name -> google.protobuf.Timestamp
	106, // 64: depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.updated_at:type_name -> google.protobuf.Timestamp
	8,   // 65: depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity.lock:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Lock
	106, // 66: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.created_at:type_name -> google.protobuf.Timestamp
	106, // 67: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.updated_at:type_name -> google.protobuf.Timestamp
	89,  // 68: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.credentials_ids:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry
	10,  // 69: depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.lock:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.Lock
	106, // 70: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.created_at:type_name -> google.protobuf.Timestamp
	106, // 71: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.updated_at:type_name -> google.protobuf.Timestamp
	91,  // 72: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.credentials_ids:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.CredentialsIdsEntry
	11,  // 73: depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.lock:type_name -> depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse.Identity.Lock
	106, // 74: depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential.created_at:type_name -> google.protobuf.Timestamp
	106, // 75: depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential.updated_at:type_name -> google.protobuf.Timestamp
	92,  // 76: depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.CredentialsEntry.value:type_name -> depot.devtools.auth.v0.identity.admin.GetCredentialsResponse.Credential
	15,  // 77: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.provider:type_name -> depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Providers
	16,  // 78: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.type:type_name -> depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Types
	17,  // 79: depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Connection.purpose:type_name -> depot.devtools.auth.v0.identity.admin.GetConnectionsResponse.Purposes
	106, // 80: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.created_at:type_name -> google.protobuf.Timestamp
	4,   // 81: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.grant_types:type_name -> depot.devtools.auth.v0.identity.admin.GrantType
	105, // 82: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.jwks:type_name -> google.protobuf.Struct
	105, // 83: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.metadata:type_name -> google.protobuf.Struct
	6,   // 84: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.request_object_signing_alg:type_name -> depot.devtools.auth.v0.identity.admin.RequestObjectSigningAlg
	5,   // 85: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.response_types:type_name -> depot.devtools.auth.v0.identity.admin.ResponseType
	1,   // 86: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.subject_type:type_name -> depot.devtools.auth.v0.identity.admin.SubjectType
	2,   // 87: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.token_endpoint_auth_method:type_name -> depot.devtools.auth.v0.identity.admin.TokenEndpointAuthMethod
	3,   // 88: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.token_endpoint_auth_signing_alg:type_name -> depot.devtools.auth.v0.identity.admin.TokenEndpointAuthSigningAlg
	106, // 89: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.updated_at:type_name -> google.protobuf.Timestamp
	7,   // 90: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.userinfo_signed_response_alg:type_name -> depot.devtools.auth.v0.identity.admin.UserinfoSignedResponseAlg
	0,   // 91: depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse.Client.client_type:type_name -> depot.devtools.auth.v0.identity.admin.ClientType
	106, // 92: depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.created_at:type_name -> google.protobuf.Timestamp
	106, // 93: depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt.expires_at:type_name -> google.protobuf.Timestamp
	105, // 94: depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema.content:type_name -> google.protobuf.Struct
	106, // 95: depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema.created_at:type_name -> google.protobuf.Timestamp
	106, // 96: depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse.JsonSchema.updated_at:type_name -> google.protobuf.Timestamp
	20,  // 97: depot.devtools.auth.v0.identity.admin.Admin.CreateIdentity:input_type -> depot.devtools.auth.v0.identity.admin.CreateIdentityRequest
	24,  // 98: depot.devtools.auth.v0.identity.admin.Admin.GetIdentity:input_type -> depot.devtools.auth.v0.identity.admin.GetIdentityRequest
	26,  // 99: depot.devtools.auth.v0.identity.admin.Admin.GetIdentityByIdentifier:input_type -> depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierRequest
	28,  // 100: depot.devtools.auth.v0.identity.admin.Admin.GetIdentitiesByAttribute:input_type -> depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeRequest
	22,  // 101: depot.devtools.auth.v0.identity.admin.Admin.GetIdentities:input_type -> depot.devtools.auth.v0.identity.admin.GetIdentitiesRequest
	30,  // 102: depot.devtools.auth.v0.identity.admin.Admin.UpdateIdentity:input_type -> depot.devtools.auth.v0.identity.admin.UpdateIdentityRequest
	32,  // 103: depot.devtools.auth.v0.identity.admin.Admin.DeleteIdentity:input_type -> depot.devtools.auth.v0.identity.admin.DeleteIdentityRequest
	54,  // 104: depot.devtools.auth.v0.identity.admin.Admin.GetAddresses:input_type -> depot.devtools.auth.v0.identity.admin.GetAddressesRequest
	56,  // 105: depot.devtools.auth.v0.identity.admin.Admin.GetAddress:input_type -> depot.devtools.auth.v0.identity.admin.GetAddressRequest
	58,  // 106: depot.devtools.auth.v0.identity.admin.Admin.UpdateAddress:input_type -> depot.devtools.auth.v0.identity.admin.UpdateAddressRequest
	60,  // 107: depot.devtools.auth.v0.identity.admin.Admin.GetTraits:input_type -> depot.devtools.auth.v0.identity.admin.GetTraitsRequest
	62,  // 108: depot.devtools.auth.v0.identity.admin.Admin.UpdateTraits:input_type -> depot.devtools.auth.v0.identity.admin.UpdateTraitsRequest
	34,  // 109: depot.devtools.auth.v0.identity.admin.Admin.GetCredentials:input_type -> depot.devtools.auth.v0.identity.admin.GetCredentialsRequest
	36,  // 110: depot.devtools.auth.v0.identity.admin.Admin.UpdateCredential:input_type -> depot.devtools.auth.v0.identity.admin.UpdateCredentialRequest
	64,  // 111: depot.devtools.auth.v0.identity.admin.Admin.GetIdentityLoginAttempts:input_type -> depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsRequest
	38,  // 112: depot.devtools.auth.v0.identity.admin.Admin.CreateConnection:input_type -> depot.devtools.auth.v0.identity.admin.CreateConnectionRequest
	40,  // 113: depot.devtools.auth.v0.identity.admin.Admin.GetConnections:input_type -> depot.devtools.auth.v0.identity.admin.GetConnectionsRequest
	42,  // 114: depot.devtools.auth.v0.identity.admin.Admin.UpdateConnection:input_type -> depot.devtools.auth.v0.identity.admin.UpdateConnectionRequest
	44,  // 115: depot.devtools.auth.v0.identity.admin.Admin.DeleteConnection:input_type -> depot.devtools.auth.v0.identity.admin.DeleteConnectionRequest
	66,  // 116: depot.devtools.auth.v0.identity.admin.Admin.CreateIdSchema:input_type -> depot.devtools.auth.v0.identity.admin.CreateIdSchemaRequest
	68,  // 117: depot.devtools.auth.v0.identity.admin.Admin.GetIdSchemas:input_type -> depot.devtools.auth.v0.identity.admin.GetIdSchemasRequest
	70,  // 118: depot.devtools.auth.v0.identity.admin.Admin.GetIdSchema:input_type -> depot.devtools.auth.v0.identity.admin.GetIdSchemaRequest
	72,  // 119: depot.devtools.auth.v0.identity.admin.Admin.GetDefaultIdSchema:input_type -> depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaRequest
	74,  // 120: depot.devtools.auth.v0.identity.admin.Admin.UpdateIdSchema:input_type -> depot.devtools.auth.v0.identity.admin.UpdateIdSchemaRequest
	76,  // 121: depot.devtools.auth.v0.identity.admin.Admin.MarkDefaultIdSchema:input_type -> depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaRequest
	78,  // 122: depot.devtools.auth.v0.identity.admin.Admin.DeleteIdSchema:input_type -> depot.devtools.auth.v0.identity.admin.DeleteIdSchemaRequest
	48,  // 123: depot.devtools.auth.v0.identity.admin.Admin.CreateOAuth2Client:input_type -> depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest
	46,  // 124: depot.devtools.auth.v0.identity.admin.Admin.GetOAuth2Clients:input_type -> depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsRequest
	50,  // 125: depot.devtools.auth.v0.identity.admin.Admin.UpdateOAuth2Client:input_type -> depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientRequest
	52,  // 126: depot.devtools.auth.v0.identity.admin.Admin.DeleteOAuth2Client:input_type -> depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientRequest
	80,  // 127: depot.devtools.auth.v0.identity.admin.Admin.GetEmailsSetup:input_type -> depot.devtools.auth.v0.identity.admin.GetEmailsSetupRequest
	82,  // 128: depot.devtools.auth.v0.identity.admin.Admin.UpdateEmailsSetup:input_type -> depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupRequest
	84,  // 129: depot.devtools.auth.v0.identity.admin.Admin.GetUserBaseStatistics:input_type -> depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsRequest
	21,  // 130: depot.devtools.auth.v0.identity.admin.Admin.CreateIdentity:output_type -> depot.devtools.auth.v0.identity.admin.CreateIdentityResponse
	25,  // 131: depot.devtools.auth.v0.identity.admin.Admin.GetIdentity:output_type -> depot.devtools.auth.v0.identity.admin.GetIdentityResponse
	27,  // 132: depot.devtools.auth.v0.identity.admin.Admin.GetIdentityByIdentifier:output_type -> depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse
	29,  // 133: depot.devtools.auth.v0.identity.admin.Admin.GetIdentitiesByAttribute:output_type -> depot.devtools.auth.v0.identity.admin.GetIdentitiesByAttributeResponse
	23,  // 134: depot.devtools.auth.v0.identity.admin.Admin.GetIdentities:output_type -> depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse
	31,  // 135: depot.devtools.auth.v0.identity.admin.Admin.UpdateIdentity:output_type -> depot.devtools.auth.v0.identity.admin.UpdateIdentityResponse
	33,  // 136: depot.devtools.auth.v0.identity.admin.Admin.DeleteIdentity:output_type -> depot.devtools.auth.v0.identity.admin.DeleteIdentityResponse
	55,  // 137: depot.devtools.auth.v0.identity.admin.Admin.GetAddresses:output_type -> depot.devtools.auth.v0.identity.admin.GetAddressesResponse
	57,  // 138: depot.devtools.auth.v0.identity.admin.Admin.GetAddress:output_type -> depot.devtools.auth.v0.identity.admin.GetAddressResponse
	59,  // 139: depot.devtools.auth.v0.identity.admin.Admin.UpdateAddress:output_type -> depot.devtools.auth.v0.identity.admin.UpdateAddressResponse
	61,  // 140: depot.devtools.auth.v0.identity.admin.Admin.GetTraits:output_type -> depot.devtools.auth.v0.identity.admin.GetTraitsResponse
	63,  // 141: depot.devtools.auth.v0.identity.admin.Admin.UpdateTraits:output_type -> depot.devtools.auth.v0.identity.admin.UpdateTraitsResponse
	35,  // 142: depot.devtools.auth.v0.identity.admin.Admin.GetCredentials:output_type -> depot.devtools.auth.v0.identity.admin.GetCredentialsResponse
	37,  // 143: depot.devtools.auth.v0.identity.admin.Admin.UpdateCredential:output_type -> depot.devtools.auth.v0.identity.admin.UpdateCredentialResponse
	65,  // 144: depot.devtools.auth.v0.identity.admin.Admin.GetIdentityLoginAttempts:output_type -> depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse
	39,  // 145: depot.devtools.auth.v0.identity.admin.Admin.CreateConnection:output_type -> depot.devtools.auth.v0.identity.admin.CreateConnectionResponse
	41,  // 146: depot.devtools.auth.v0.identity.admin.Admin.GetConnections:output_type -> depot.devtools.auth.v0.identity.admin.GetConnectionsResponse
	43,  // 147: depot.devtools.auth.v0.identity.admin.Admin.UpdateConnection:output_type -> depot.devtools.auth.v0.identity.admin.UpdateConnectionResponse
	45,  // 148: depot.devtools.auth.v0.identity.admin.Admin.DeleteConnection:output_type -> depot.devtools.auth.v0.identity.admin.DeleteConnectionResponse
	67,  // 149: depot.devtools.auth.v0.identity.admin.Admin.CreateIdSchema:output_type -> depot.devtools.auth.v0.identity.admin.CreateIdSchemaResponse
	69,  // 150: depot.devtools.auth.v0.identity.admin.Admin.GetIdSchemas:output_type -> depot.devtools.auth.v0.identity.admin.GetIdSchemasResponse
	71,  // 151: depot.devtools.auth.v0.identity.admin.Admin.GetIdSchema:output_type -> depot.devtools.auth.v0.identity.admin.GetIdSchemaResponse
	73,  // 152: depot.devtools.auth.v0.identity.admin.Admin.GetDefaultIdSchema:output_type -> depot.devtools.auth.v0.identity.admin.GetDefaultIdSchemaResponse
	75,  // 153: depot.devtools.auth.v0.identity.admin.Admin.UpdateIdSchema:output_type -> depot.devtools.auth.v0.identity.admin.UpdateIdSchemaResponse
	77,  // 154: depot.devtools.auth.v0.identity.admin.Admin.MarkDefaultIdSchema:output_type -> depot.devtools.auth.v0.identity.admin.MarkDefaultIdSchemaResponse
	79,  // 155: depot.devtools.auth.v0.identity.admin.Admin.DeleteIdSchema:output_type -> depot.devtools.auth.v0.identity.admin.DeleteIdSchemaResponse
	49,  // 156: depot.devtools.auth.v0.identity.admin.Admin.CreateOAuth2Client:output_type -> depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientResponse
	47,  // 157: depot.devtools.auth.v0.identity.admin.Admin.GetOAuth2Clients:output_type -> depot.devtools.auth.v0.identity.admin.GetOAuth2ClientsResponse
	51,  // 158: depot.devtools.auth.v0.identity.admin.Admin.UpdateOAuth2Client:output_type -> depot.devtools.auth.v0.identity.admin.UpdateOAuth2ClientResponse
	53,  // 159: depot.devtools.auth.v0.identity.admin.Admin.DeleteOAuth2Client:output_type -> depot.devtools.auth.v0.identity.admin.DeleteOAuth2ClientResponse
	81,  // 160: depot.devtools.auth.v0.identity.admin.Admin.GetEmailsSetup:output_type -> depot.devtools.auth.v0.identity.admin.GetEmailsSetupResponse
	83,  // 161: depot.devtools.auth.v0.identity.admin.Admin.UpdateEmailsSetup:output_type -> depot.devtools.auth.v0.identity.admin.UpdateEmailsSetupResponse
	85,  // 162: depot.devtools.auth.v0.identity.admin.Admin.GetUserBaseStatistics:output_type -> depot.devtools.auth.v0.identity.admin.GetUserBaseStatisticsResponse
	130, // [130:163] is the sub-list for method output_type
	97,  // [97:130] is the sub-list for method input_type
	97,  // [97:97] is the sub-list for extension type_name
	97,  // [97:97] is the sub-list for extension extendee
	0,   // [0:97] is the sub-list for field type_name
}

func init() { file_devtools_auth_v0_proto_identity_admin_admin_proto_init() }
func file_devtools_auth_v0_proto_identity_admin_admin_proto_init() {
	if File_devtools_auth_v0_proto_identity_admin_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityByIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityByIdentifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentitiesByAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentitiesByAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOAuth2ClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOAuth2ClientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOAuth2ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOAuth2ClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOAuth2ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOAuth2ClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOAuth2ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOAuth2ClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTraitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTraitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTraitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTraitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityLoginAttemptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityLoginAttemptsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdSchemasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdSchemasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultIdSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultIdSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkDefaultIdSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkDefaultIdSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailsSetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailsSetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailsSetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailsSetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBaseStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBaseStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentitiesResponse_Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityByIdentifierResponse_Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentitiesByAttributeResponse_Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialsResponse_Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionsResponse_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOAuth2ClientsResponse_Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressesResponse_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityLoginAttemptsResponse_Attempt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdSchemasResponse_JsonSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailsSetupResponse_EmailTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailsSetupResponse_EmailSender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailsSetupRequest_EmailTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailsSetupRequest_EmailSender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*GetAddressRequest_Id)(nil),
		(*GetAddressRequest_Verification)(nil),
	}
	file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*UpdateAddressRequest_Verified)(nil),
		(*UpdateAddressRequest_Address)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDesc,
			NumEnums:      20,
			NumMessages:   85,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_devtools_auth_v0_proto_identity_admin_admin_proto_goTypes,
		DependencyIndexes: file_devtools_auth_v0_proto_identity_admin_admin_proto_depIdxs,
		EnumInfos:         file_devtools_auth_v0_proto_identity_admin_admin_proto_enumTypes,
		MessageInfos:      file_devtools_auth_v0_proto_identity_admin_admin_proto_msgTypes,
	}.Build()
	File_devtools_auth_v0_proto_identity_admin_admin_proto = out.File
	file_devtools_auth_v0_proto_identity_admin_admin_proto_rawDesc = nil
	file_devtools_auth_v0_proto_identity_admin_admin_proto_goTypes = nil
	file_devtools_auth_v0_proto_identity_admin_admin_proto_depIdxs = nil
}
